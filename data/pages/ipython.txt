{{tag>programmation IDE}}
====== ipython ======
 
Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]]

Ipython est un interpréteur python amélioré qui apporte un pack de nouvelles fonctions sympa que je vais vous lister succinctement.
  * Auto-complétion avec la touche TAB
    * L'auto-complétion trouve les variables qui ont été déclarées.
    * Elle trouve les mots clefs et les fonctions locales.
    * La complétion des méthodes sur les variables tiennent compte du type actuel de cette dernière.
    * Par contre la complétion ne tient pas compte du contexte.
  * Historique persistant (même si on quitte l'interpréteur, on peut retrouver les dernières commandes par l'historique)
    * Recherche dans l'historique avec ctrl+P (previous), ctrl+n (next) les entrées commençant par la partie manuellement entrée
    * Isole dans l'historique les entrées multilignes
    * On peut désormais éditer des lignes antérieures dans le cas d'instructions multilignes
    * On peut appeler les instructions précédentes qui sont rangées dans une liste _i[n] pour la même commande ou _ii (pour la dernière commande et plus on ajoute de i et plus on remonte)
  * Contient des raccourcis et alias
    * entrez "%magic" pour connaître les raccourcis
    * "!" permet d'exécuter directement des commandes systèmes.
    * ajoute les parenthèses automatiquement sur les fonctions ( "callable_ob arg1, arg2, arg3"    ==     "callable_ob(arg1, arg2, arg3)"  )
  * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?"
  * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string).
  * Colore et organise les sorties (messages d'erreur ou retour à la ligne entre chaque élément d'une liste si on l'affiche)

et encore bien d'autres fonctions... espérons que le prompt de python 3.0 ait les principaux avantages de ce prompt avec prioritairement la documentation et l'auto-complétion.