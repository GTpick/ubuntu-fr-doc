{{tag>programmation IDE}}

----



====== EiffelStudio : Environnement de développement intégré Complet ======

**EiffelStudio** est l'outil de développement qui utilise toute la puissance du 
langage Eiffel. EiffelStudio procure toutes les fonctions qu'un IDE doit accomplir 
(Édition, manipulation de code, coloration syntaxique, auto-complétion, mise au point, etc...). EiffelStudio fournit, également, des outils de modélisation et 
de génie logiciel intégrés qui permettent d'avoir une documentation logicielle toujours valide, à jour et exacte.



===== Installation d'EiffelStudio depuis le PPA  =====

Pour installer EiffelStudio avec apt-get depuis le PPA, ouvrir un terminal et utiliser les lignes de commande suivante:

<code>
sudo add-apt-repository ppa:eiffelstudio-team/ppa 
sudo apt-get update 
sudo apt-get install eiffelstudio
</code>
























===== Installation manuelle d'EiffelStudio =====
<note>Cette installation ne fonctionne que pour un seul usager. Les autres usagers n'auront pas droit d'écriture dans les répertoires d'Eiffel</note>
<note>Cette méthode est recommandé pour ceux qui voudrait avoir plusieurs version d'EiffelStudio sur leur système.</note>
Premièrement, il faut installer les dépendances:
<code>sudo apt-get install libgtk2.0-dev libxtst-dev</code>

Vous devez ensuite aller chercher l'archive d'EiffelStudio sur le site d'[[https://www2.eiffel.com/download/download_info.aspx?id=eiffelstudio&info=false&mirrors=public|ISE Eiffel]] ou bien sur [[http://sourceforge.net/projects/eiffelstudio/files/|SourceForge]]. Dans les exemples ci-dessous, la version 14.05 pour linux x86 32 bits est utilisée.
<note>Une inscription est nécessaire pour télécharger le fichier sur le site d'ISE Eiffel.</note>

Ouvrez un terminal (Applications->Accessoires->Terminal), aller dans le répertoire dans lequel vous avez téléchargé l'archive et décompresser-la.
<code>
cd Répertoire_Contenant_l_archive
tar xvfj Eiffel_*_gpl_*-linux-*.tar.bz2
</code>

Déplacez le nouveau répertoire créé dans /usr/local/
<code>
sudo mv Eiffel_??.?? /usr/local/   # Votre mot de passe vous sera demandé 
</code>


Pour démarrer EiffelStudio, lancer dans un terminal:
<code>
export LANG=C
export ISE_EIFFEL=/usr/local/Eiffel_14.05
export ISE_PLATFORM=linux-x86
# export ISE_PLATFORM=linux-x86-64    # Si vous êtes sur un système 64 bits
export PATH=$PATH:$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin

estudio </code>

<note>Sur Kubuntu, si vous avez des erreurs d'affichage et qu'en ligne de commande, EiffelStudio donne le message suivant:

"Pango-WARNING **: failed to create cairo scaled font, expect ugly output."

Vous devez utiliser la commande:
<code>sudo fc-cache -f -v</code>
</note>
=== Créer un lanceur ===

Créer le lanceur
<code>
sudo xdg-open /usr/local/bin/eiffelstudio
</code>
Inscrire le script suivant dans le fichier
<code>
#!/bin/sh
export LANG=C
export ISE_EIFFEL=/usr/local/Eiffel_14.05
export ISE_PLATFORM=linux-x86
# export ISE_PLATFORM=linux-x86-64    # Si vous êtes sur un système 64 bits
export PATH=$PATH:$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin
estudio</code>
Sauvegarder et fermer le fichier.

Donner les droits d'exécution à notre script
<code>
sudo chmod +x /usr/local/bin/eiffelstudio
</code>

Vérifier que le lanceur fonctionne
<code>
eiffelstudio
</code>
<note important>
A noter que l'exécution d'un programme en mode console dans Eiffel Studio nécessite que celui-ci soit lancé depuis une console pour voir le flux de sortie.
</note>
Si eiffelstudio ouvre correctement, c'est réussi. Vous pouvez maintenant démarrer eiffelstudio par terminal ou par lanceur graphique (Alt+F2). Vous pouvez également faire un nouvel élément dans le menu application en utilisant l'outil [[:alacarte]]. Vous n'avez qu'à créer un nouvel élément (lanceur) et mettre dans le champ commande:
<code>
eiffelstudio
</code>
Noter qu'une icône d'EiffelStudio peut être trouvé là:
<code>
/usr/local/Eiffel_14.05/studio/bitmaps/png/logo.png
</code>

=== Créer un lanceur pour EiffelBuild ===
Le programme EiffelBuild est un créateur de fenêtre pour vision2. Ce programme fait partie de la suite eiffelstudio. Voici la démarche pour pouvoir l'utiliser.
Créer le lanceur
<code>
sudo xdg-open /usr/local/bin/eiffelbuild
</code>
Inscrire le script suivant dans le fichier
<code>
#!/bin/sh
export LANG=C
export ISE_EIFFEL=/usr/local/Eiffel_14.05
export ISE_PLATFORM=linux-x86
# export ISE_PLATFORM=linux-x86-64    # Si vous êtes sur un système 64 bits
export PATH=$PATH:$ISE_EIFFEL/esbuilder/spec/$ISE_PLATFORM/bin 
esbuilder</code>
Sauvegarder et fermer le fichier.

Donner les droits d'exécution à notre script
<code>
sudo chmod +x /usr/local/bin/eiffelbuild
</code>

Vérifier que le lanceur fonctionne
<code>
eiffelbuild
</code>
Si eiffelbuild ouvre correctement, c'est réussi. Vous pouvez maintenant démarrer eiffelbuild par terminal ou par lanceur graphique (Alt+F2). Vous pouvez également faire un nouvel élément dans le menu application en utilisant l'outil [[:alacarte]] (ou l'éditeur de menu sous kubuntu). Vous n'avez qu'à créer un nouvel élément (lanceur) et mettre dans le champ commande:
<code>
eiffelbuild
</code>