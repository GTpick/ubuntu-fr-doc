{{tag> Xenial téléphonie usb bluetooth brouillon}}

----

====== Votre GSM Nokia avec Ubuntu ======
<note>Cette page est assez ancienne, cependant, des infos sont encore vraie sous Xenial</note>
Cette page se propose de regrouper les infos concernant l'interaction entre un téléphone Nokia avec Ubuntu.

Un téléphone portable offre un grand nombre de services. Cependant vous devez savoir qu'il est toujours possible d'échanger les informations contenues sur la carte mémoire par une simple connexion USB entre le téléphone mobile et votre PC. Sinon vous pouvez toujours faire un transfert direct entre la carte SD et votre PC.

Il existe 4 types d'utilisations principales:
  - Actuellement:
    * Connexion Bluetooth : La majorité des téléphones et des portables récents propose une connexion sans fil simple et efficace à courte portée.
    * Connexion USB
    * Téléphoner via son PC
    * Connexion Internet via le téléphone : Tous les téléphones assurent la fonction modem. La vitesse d'affichage d'une page sur un téléphone étant fortement limitée par la puissance de calcul de celui-ci. Vous devriez profiter pleinement des capacités du modem, par exemple: 
      * débit réel théorique SRF 3G+, de 3,4 Mbit/s, UMTS :: 384 Kb/s >> 48 Ko/s, 3G+ :: 1,8 Mb/s > 225 Ko/s, GPRS ::  80 Kb/s (10 Ko/s), Edge > 236 Kb/s (30 Ko/s).
  - Dans le futur:
    * GPS et Ubuntu
    * Utilisation de son téléphone comme webcam
    * Télévision par TNT grâce au N96
    * Prise en charge des accéléromètres
    * Télécommande par Bluetooth
    * ...
  - Dans le passé:
    * Connecter par infrarouge (IRDA)(technique ancienne et limitée)

<note tip>
__A savoir:__
Nokia fournit au développeur un kit de développement et la documentation permettant créer des applications en Java sur le téléphone. L'arrivée de futures applications innovantes et libres est donc très probable.
</note>
===== Compatibilité générale =====

^ Section ^ Téléphones testés ^
|Connecter son téléphone NOKIA à Ubuntu par Bluetooth|Nokia 5000 (depuis Intrepid)\\ Nokia 5200 (Intrepid)\\ Nokia 5310 XpressMusic (Karmic) \\ Nokia 5800 XpressMusic (Karmic) \\ Nokia 6210i (Dapper, Edgy)\\ Nokia 6230i (Dapper & Edgy)\\ Nokia 6021(Dapper, Gutsy)\\ Nokia 6280 (hardy) \\  Nokia 6086 (Gutsy)\\ Nokia 2630 (Jaunty) \\ Nokia 6300 (Hardy) \\ Nokia N95 \\ Nokia E63 \\ Nokia E65 \\ Nokia E71 \\ Nokia E72 \\ Nokia 5310 XpressMusic (Jaunty) \\ Nokia N85 \\ Nokia N97 \\ Nokia N9|
|Connecter son téléphone NOKIA à Ubuntu par un câble USB|Nokia 3109c (Hardy) \\ Nokia 5200 (Dapper) \\ Nokia 5310 XpressMusic (Gutsy)\\ Nokia 5800 XpressMusic (Karmic,Lucid)\\ Nokia 6500 (Karmic) \\ (Intrepid) \\ Nokia E65 (Hardy, Intrepid & Jaunty) Nokia 3600 slide (Jaunty) \\ N95 (Karmic) \\ Nokia N85 \\ Nokia N97 \\ Nokia 6700 classique\\ Nokia N95 \\ Nokia N70\\ Nokia N900 \\ Nokia N8 \\ Nokia N9 \\ Nokia X6 |
|Connecter son téléphone NOKIA à Ubuntu par infrarouge (Irda)|Nokia 6020 (Gutsy)\\ Nokia 6610i (Hardy)|
|Téléphonie via PC| - |
|Connexion Internet via le téléphone| Nokia E63 \\ Nokia E7-00 \\ N95 \\ Nokia N85  \\ Nokia N97 \\ Nokia 6700 classique \\ Nokia N900 \\ Nokia 5800 XPress Music \\ Nokia N8 \\ Nokia N9 \\ Nokia X6 |
 
//Ce tableau est proposé à titre indicatif.//



===== Connectivité du téléphone au PC =====

Pour cet exemple, on a utilisé le NOKIA 2630.
nokia 5200

==== Par bluetooth ====

Cette section propose quelques explications pour utiliser les outils Gammu/Wammu sous le système d'exploitation ubuntu pour communiquer avec les téléphone via bluetooth (Nokia).

=== Préambule ===

Je suppose que vous disposez d'un système d'exploitation Ubuntu fonctionnel et standard. Je teste toutes ces fonctionalités avec un GSM Nokia 6210i.

Il vous faut aussi [[:tutoriel:comment_modifier_sources_maj|ajouter les dépôts]] //universe// et //multiverse//.

=== Compatibilité ===
   * Nokia 6210i
   * Nokia 6230i
   * Nokia 6021
   * Nokia 6125
   * Nokia 6111
   * Nokia 5200 (synchro répertoire et appels uniquement)
   * Nokia 5310 XpressMusic
   * Nokia 6131
   * Nokia 6280 (compatibilité partielle)
   * Nokia 6300

=== Prérequis ===

Vous devez avoir un appareil fonctionnant avec le bluetooth ainsi qu'un ordinateur disposant d'un moyen quelconque d'accéder à un périphérique Bluetooth.

=== Installation ===

Dans un premier temps, [[:tutoriel:comment_installer_un_paquet:|installez ces paquets]] :
  * bluez-pcmcia-support
  * bluez-pin
  * bluez-utils
  * gnome-bluetooth

Il y a quelques dépendances à satisfaire. Installez. Nous allons voir l'utilisation.

<note>Sous Dapper Drake, //bluez-pcmcia-support//, //bluez-pin//, et //bluez-utils// sont installés par défaut.</note>

Toute cette manœuvre en une seule commande :

  sudo apt-get install bluez-pcmcia-support bluez-pin bluez-utils gnome-bluetooth gammu wammu


=== Configuration ===

[[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **/etc/bluetooth/hcid.conf**.

<file>
options { 
        autoinit yes; 
        security auto; 
        pairing multi; 
        pin_helper /etc/bluetooth/givepin; 
        #dbus_pin_helper; 
} 
device { 
        name "%h-%d"; 
        class 0x3e0100; 
        #pkt_type DH1,DM1,HV1; 
        # Inquiry and Page scan 
        iscan enable; pscan enable; 
        lm accept; 
        lp rswitch,hold,sniff,park; 
        # Authentication and Encryption (Security Mode 3) 
        #auth enable; 
        #encrypt enable; 
}
</file>
[[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **etc/bluetooth/givepin**.

<file>
#!/bin/sh 
echo "PIN:5432" 
</file>

5432 est le code PIN pour la sécurité. N'oubliez pas de donner les droits d'exécution pour ce fichier,

  sudo chmod +x /etc/bluetooth/givepin

**Fichier de configuration de Gammu « ~/.gammurc » **//(ou « /etc/gammurc »)// :
<file>
[gammu] 
port = 00:15:DE:29:05:81      #ce numéro dépend du téléphone. A tester avec la commande $ hcitool scan
model = 6230i 
connection = bluerfphonet 
#connection = blueat 
synchronizetime = yes 
logfile = gammulog 
logformat = textall 
use_locking = yes 
gammuloc = locfile 
startinfo = yes 
gammucoding = utf8 
rsslevel = teststable 
usephonedb = yes 
</file>

**Autre paramétrage testé pour Gammu « ~/.gammurc » **//(ou « /etc/gammurc »)// :
<file>
[gammu] 
port = 00:15:DE:29:05:81 
model = auto 
connection = bluephonet 
... idem que ci-dessus
</file>

=== Utilisation ===

**Scanner les périphériques bluetooth disponible :**
<code>
$ hcitool scan 
Scanning ... 
        00:15:DE:29:05:81       mobile 
</code>

**Identification du périphérique :**
<code>
$ gammu --identify 
Manufacturer  : Nokia 
Model         : 6230i (RM-72) 
Firmware      : 03.40 C (23-05-05) 
Hardware      : 5006 
IMEI          : ******************* 
Original IMEI : 
Manufactured  : 00/0000 
Product code  : 0528222 
UEM           : 400 
</code>

**Date et l'heure du téléphone**
<code>
$ gammu --getdatetime 
Phone time is mar 11 jui 2006 21:26:00 
Time format is 12 hours 
Date format is DD MM YYYY, date separator is / 
</code>

**Envoi d'SMS**
<code>
$ echo "un simple sms" | gammu --sendsms TEXT 06XXXXXX 
If you want break, press Ctrl+C... 
Sending SMS 1/1....waiting for network answer..OK, message reference=121 
</code>

**Upload d'application Java**
L'application a deux fichiers : Vidance.jar et Vidance.jad

<code>
$ gammu --nokiaaddfile Application Vidance 
Searching for phone folder: ********** 
Adding "Vidance" version 0.1.1 created by VidarHolen.net 
Writing JAD file: 100 percent 
Writing JAR file: 100 percent 
</code>

Si l'application existe déjà (installation ratée par exemple) on peut la forcer (-overwrite pour l'appli -overwriteall pour appli et ses données) :
<code>
 $ gammu --nokiaaddfile Application BT_J2ME -overwriteall
Searching for phone folder: *********
Adding "BT_J2ME Midlet Suite" version 0.2.68 created by Mario De Weerd <m.deweerd@ieee.org>
Information: Application already exists. Deleting by Gammu.
  Deleting wclk_en_de_es-ES_fr_it_tr-TR_nl-NL_pt-PT.jad
  Deleting wclk_en_de_es-ES_fr_it_tr-TR_nl-NL_pt-PT.jar
  Deleting wclkrms.rms
Writing JAD file: 100 percent                              
Writing JAR file: 100 percent                
</code>
=== Utilisation avec WAMMU ===

cf [[gammu]].



==== Par un câble USB ====

Connecter son téléphone NOKIA à Ubuntu par un câble USB
Ici est expliqué ce qui fonctionne sous Ubuntu Feisty avec un Nokia 5200 ou un Nokia N97 mini.


=== Pré-requis ===

  * un câble USB pour relier votre téléphone à votre ordinateur.

=== Utilisation et configuration ===

== Modes de communication du téléphone ==

Une fois l'appareil branché sur un port USB, le téléphone vous propose de choisir entre trois modes décrits ci-dessous :

  * Mode Nokia : contacts, messages, appels, etc. ;
  * Mode PC Suite (sur N97 mini) : connexion à Internet via mobile 3G ;
  * Mode Stockage de données : faire fonctionner votre téléphone comme une clé USB (nécessite une carte mémoire MicroSD) ;
  * Mode Impression et Multimédia : Mode Appareil photo numérique ;


== Mode Nokia ==

Mode de communication dédié qui permet l'échange de données propres à des fonctions de téléphonie: contact, calendrier, messages, etc.

Ce mode fonctionne notamment avec l'application **wammu**, qui est une interface pour le programme **Gammu**.

Pour l'utiliser, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **wammu**.

Vous pouvez alors lancer wammu par le menu //Applications -> Accessoires// ou lancer la commande :

  wammu

Menu : Wammu -> Configuration

Dans la nouvelle fenêtre « Paramétrage », cliquez sur l'onglet « Connexion ».

Assurez-vous que le champs « Périphérique est a : « /dev/ttyACM0 » et que le champs « Connexion » est a : « AT19200 »

Cliquer sur le bouton « Valider » pour enregistrer les modifications et fermer la fenêtre « Paramétrage ».

Pour les autres téléphones mobiles, utiliser l'« Assistant recherche téléphone » du menu : « Wammu ».

L'application est assez simple, et l'interface résume bien ce que l'on peut en faire :

{{ :materiel:cap_wammu.png }}

== Mode PC Suite ==

Ce mode permet de **connecter votre PC à Internet par l'intermédiaire d'un téléphone portable 3G** (par exemple le Nokia N97 mini, le Nokia N97, ...). Cette procédure a été testée sur Ubuntu Karmic Koala avec un Nokia N97 mini.

Commencez par connecter, au moyen d'un câble USB, votre téléphone à votre PC (portable).
Dés qu'il est connecté, sélectionnez "PC Suite" dans le menu affiché automatiquement sur votre téléphone Nokia.

Sous Ubuntu, allez dans le menu //Système -> Préférences -> Connexions réseau//.

La fenêtre « Connexions réseau »  s'affiche. Sélectionnez l'onglet « Connexion mobile à large bande » , puis cliquez sur le bouton « Ajouter ».

  - Sélectionnez dans la liste déroulante votre téléphone « Nokia N97 mini » qui vient d'être détecté par Ubuntu (Celui-ci peut avoir un autre nom selon comment vous avez configuré votre téléphone), puis cliquez sur « Suivant ».
  - Choisissez votre pays : « Switzerland » par exemple, puis cliquez sur « Suivant ».
  - Choisissez votre opérateur : « Swisscom » par exemple, puis cliquez sur « Suivant ».
  - Laissez le plan de facturation par défaut : « gprs.swisscom.ch » par exemple, puis cliquez sur « Suivant ».
  - Cliquez sur « Appliquer ».
  - Une nouvelle fenêtre « Modification de Swisscom Par défaut 1 » s'affiche. Cliquez sur "Appliquer".

Votre connexion est maintenant prête à être utilisée.

Cliquez sur l'icône "antenne" situé en haut à droite de la barre de menu Ubuntu (à côté de l'icône pour le volume du haut-parleur), puis sélectionnez, dans le menu affiché, l'option correspondant à votre connexion (par exemple « Swisscom Par défaut 1 »).

Ça y est ! Vous êtes connecté !

== Mode Stockage de données ==

Ce mode vous permet d'utiliser un téléphone muni d'une carte mémoire MicroSD  d'être utilisé à la manière d'une clé USB.

Dans ce mode, le téléphone est reconnu automatiquement, et Ubuntu utilise la carte mémoire comme une clé USB (ouverture d'une fenêtre Nautilus, nouvelle icône dans le poste de travail, etc.).

Pour configurer les actions entreprise par Ubuntu à la connexion, voir le menu //Système -> Préférences -> Périphériques et médias amovibles//.

<note important>
Seul le contenu de la carte MicroSD est accessible.
</note>

<note tip>
N'oubliez pas de démonter le volume (Poste de travail, clique-droit sur l'//icône du téléphone -> Éjecter//) ou de quitter le mode //Stockage de données// sur le téléphone avant de le débrancher.
</note>

== Mode Impression et Multimédia ==

Permet de gérer les données multimédia du téléphone: images, musique, etc.

Une fois connecté dans ce mode, Gthumb reconnais le téléphone et son contenu ... mais ne semble pas pouvoir importer les données.

On peut néanmoins utiliser [[:GTKam]], très léger et qui fonctionne très bien. [[:tutoriel:comment_installer_un_paquet|Pour l'installer, c'est le paquet]] **gtkam**.

Lancez alors la commande :

  gtkam

Le téléphone est reconnu en tant que « MTP device ».

==== Par infrarouge (Irda) ====
=== Compatibilité ===
  * Nokia 6020
  * Dongle infrarouge "Irda" en USB trouvé pour pas grand chose en grande surface spécialisée.


=== Prérequis ===
Avant toute chose, commencez par débrancher le dongle Irda et n'activez pas tout de suite l'infrarouge de votre téléphone. Cela vous permettra de valider le bon fonctionnement de votre installation étape par étape.

=== Installation ===
[[:tutoriel:comment_installer_un_paquet|Installez les paquets]] suivants :
<code>$ sudo apt-get install irda-utils wammu openobex-apps obexfs</code>

Puis relancez le service Infrarouge :
<code>$ sudo /etc/init.d/irda-utils start</code>

=== Configuration ===
Vous pouvez maintenant branchez le dongle USB. Linux reconnais le dongle, le répertoire ''/proc/net/irda'' apparaît, mais il ne voit pas votre téléphone (vous n'avez pas encore activé l'infrarouge):
<code>
$ sudo cat /proc/net/irda/discovery /proc/net/irda/irlap
 	IrLMP: Discovery log:

	irlap0 state: LAP_NDM
</code>

C'est parce que l'interface Infrarouge, détectée comme une carte réseau, n'est pas active (pas d'adresse matérielle ''HWaddr'') :
<code>
$ ifconfig irda0
irda0     Link encap:IrLAP  HWaddr 00:00:00:00
</code>

On l'active :
<code>$ sudo ifconfig irda0 up</code>

Bravo, ça marche; on a une adresse et le dongle commence à émettre :
<code>
$ sudo ifconfig irda0
irda0     Link encap:IrLAP  HWaddr 9a:ea:ad:xx

$ sudo cat /proc/net/irda/discovery /proc/net/irda/irlap
	IrLMP: Discovery log:

	irlap0 state: LAP_NDM
	  device name: irda0, hardware name: usb#11
	  caddr: 0x28, saddr: 0x37d58b8d, daddr: 0x000000
	  win size: 0, win: 0, line capacity: 0, bytes left: 0
	  tx queue len: 0 win queue len: 0 rbusy: FALSE mbusy: FALSE
	  retrans: 0 vs: 0 vr: 0 va: 0
	  qos   bps     maxtt   dsize   winsize addbofs mintt   ldisc   comp
	  tx    9600    0       64      1       12      0       0
	  rx    9600    0       64      1       12      0       0
</code>

Maintenant, activez l'infrarouge sur le téléphone et lancez la commande suivante (qui permet l'association du téléphone avec l'ordinateur) :
<code>$ sudo irattach irda0 -s</code>

Le téléphone devrait alors être reconnu :
<code>$ sudo cat /proc/net/irda/discovery
	IrLMP: Discovery log:
	nickname: Nokia 6020, hint: 0xb125, saddr: 0x37d58b8d, daddr: 0x00002f24
</code>

Il reste à tester la connexion avec la commande gammu. Pour commencer, il faut la configurer. Pour cela, créez le fichier .gammurc dans votre dossier utilisateur ([[:tutoriel:comment_editer_un_fichier|avec gedit ou autre éditeur]]) et mettez-y le texte suivant:
<code>
[gammu]
port = /dev/ttyS1
connection = irda
</code>

Maintenant, la commande gammu devrait vous donner des informations sur votre téléphone :
<code>
$ gammu --identify
	Manufacturer  : Nokia
	Model         : 6020 (RM-30)
	Firmware      : 04.50 C (19-12-05)
	Hardware      : 5051
	IMEI          : 3597490xxxxxx
	Original IMEI : 359749/00/xxxxxx/x
	Manufactured  : 07/2006
	Product code  : 0538990
</code>


=== Utilisation avec Wammu ===
Vous allez pouvoir récupérer vos contacts, sms et historique des appels avec Wammu, une interface graphique pour gammu. Vous devriez trouver Wammu dans le menu Applications > Accessoires.

=== Récupérer vos fichiers ===
Pour récupérer les photos, musiques, vous allez "monter" le système de fichier du téléphone dans votre système de fichier Linux à l'aide de Fuse et du pilote obexfs.

<note important>Cette partie ne fonctionne qu'en ligne de commande. Nautilus plante lors de l'accès au système de fichiers du téléphone.</note>

Commencez par créer un répertoire de montage :
<code>$ sudo mkdir /media/telephone</code>

Et maintenant montez le système de fichier de votre téléphone sur ce répertoire :
<code>$ sudo mount -t fuse "obexfs#-i" /media/telephone</code>

C'est fini, vous pouvez parcourir les répertoires du téléphone, déplacer, copier et supprimer des fichiers :
<code>
$ ls /media/telephone
Clips vid?o  Enreg.  Icones  Photos  Th?mes  Tonalit?s
</code>

Quand vous avez terminé, démontez le système de fichiers avec la commande :
<code>$ sudo fusermount -u /media/telephone</code>


=== Petit Bonus ===
Vous pouvez écouter vos mp3 favoris sur votre téléphone. Il suffit de les convertir au format amr avec la commande suivante et de les copier sur votre téléphone :
<code>$ ffmpeg -i la_musique.mp3 -acodec amr_nb -ar 8000 -ac 1 -ab 32 la_musique.amr</code>


=== Sources et liens connexes ===
Source principale : [[http://blog.furgerot.fr/post/2007/06/09/28-telephone-infrarouge-linux-photos-etape-1-]]

Sujets proches dans Ubuntu-fr :
[[:irda_port_infrarouge|Faire fonctionner l'irda]], [[:obexftp|Accéder aux données du téléphone]], [[:gammu|Plus de détails sur Gammu et Wammu]]

===== Connexion Internet via le téléphone =====

voir ce tuto :[[telephone_modem]]

===== Voir aussi =====

  * [[http://www.nokia.com/|Site international Nokia]]
  * [[:tutoriel:pys60_sur_des_portables_nokia|Comment programmer des applications en PYTHON sur son téléphone Nokia]]

----

//Contributeurs : [[utilisateurs:Younes]], [[:utilisateurs:Yvecai]], [[:utilisateurs:bcag2]].//