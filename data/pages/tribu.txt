{{tag>brouillon partage}}
{{tribu.png}}

====== TribU ======

===== But =====

TribU permet, au travers d'une passerelle installée sur le PC de l'utilisateur la publication de données publiques.
La modification des données se fait à partir des programmes habituels de l'utilisateur.
Les données rendues publiques seront accessibles aux autres personnes via une interface web.

On pourra donc grâce à cette plate-forme partager ses photos, video, sons, publier un blog etc ...
Cela existe dejà avec la plateforme .mac (propriétaire). Le but est donc de s'en inspirer afin de développer quelque chose se rapprochant de .mac mais en version LIBRE (et gratuit)
Pour une idée plus concrète : http://www.apple.com/fr/dotmac/

Il n'est plus question de stocker des données privées (calendrier, contacts, mails, ...).
Pour celà, il faudra attendre de nouveaux plug-ins développés pour multisync, evolution, ...

**Nouveau wiki "officiel" sur http://tribu.sourceforge.net/**

===== Caractéristiques =====

TribU se décomposera en plusieurs parties : 

== Les applications clientes ==  
Ce sont les applications qui vont permettre de publier des données sur internet.
Il faudra développer les plugins pour les applications adéquates afin qu'elles puissent communiquer avec la passerelle.
Ces plug-ins pourront se baser sur une API fournie par le projet.

== La passerelle ==
C'est une application qui communique avec les applications clientes et les serveurs stockant les données (type google, yahoo, tribu, etc ...).
Quand une application cliente voudra accéder aux données publiées, la passerelle se chargera de changer le protocole standard client <-> passerelle en protocole spécifique passerelle <-> serveur tiers.

== Les serveurs tiers == 
Ce sont tous les services externes comme Google, PicassaWeb, My Space etc ... 
On laissera à ces services le soin de stocker les données et de gérer l'affichage publique des données.

L'inconvénient d'utiliser des serveurs tiers comme Google, My Space, ... c'est que mes publications seront "éparpillées" sur le web.
Par exemple, pour voir mes photos les internautes iront sur picasaweb et pour voir mon blog sur blogger.

== Le serveur TribU == 
C'est un serveur de stockage et de publication. 
Il s'agit en fait un serveur tiers pour la passerelle. Il devra donc être capable de stocker les données et de les afficher.
L'intérêt du serveur TribU est qu'il sera capable de s'occuper de tous les types de données.
Les données publiques pourront donc toutes être stockées sur un même serveur et donc visible sur une même page.

-> Au vue des contraintes techniques que pose le développement de ce serveur, celui-ci n'est pas inclu pour le moment dans la 1ere phase de ce projet. Voir ceci comme un but à atteindre.


==== Les données visées ====

Elles peuvent être intégrées petit à petit, mais à terme le projet pourrait regrouper tout celà :
  * Photos
  * Blog
  * Documents
  * Partage Fichier
  * Partage de musique
  * RSS

==== Utilisations ====

  - Configuration de la passerelle par l'utilisateur : chaque service est configuré indépendement (choix du service hébergeant les données : google, yahoo, tribu, ...).
  - Requête de l'application cliente : L'application cliente veut publier/modifier des données. La passerelle traite la requête en communiquant avec le service sélectionné

==== Exemples ====
  * J'ai un compte PicassaWeb. J'ai des photos sur mon disque que je veux publier.
    - Je configure la passerelle pour utiliser le compte PicassaWeb
    - Je clique sur la photo 2033.jpg dans gthumb, puis je clique sur  « Publier »
    - gthump envoie la requête à la passerelle qui l'envoie à PicassaWeb qui publie la photo

  * J'ai un compte TribU. J'ai des photos sur mon disque que je veux publier.
    - Je configure la passerelle pour utiliser le serveur TribU
    - Je clique sur la photo 2033.jpg dans gthumb, puis je clique sur « Publier »
    - gthump  envoie la requete à la passerelle qui l'envoie au serveur TribU qui publie la photo

  * J'ai un compte sur un serveur X capable de publier mes photos. J'aimerais supprimer des vieilles photos que j'ai publié.
    - Je configure la passerelle pour utiliser le serveur X.
    - J'ouvre gthumb et lui demande de visualiser mes données publiées.
    - Gthumb demande la liste de mes photos à la passerelle.
    - La passerelle se connecte au serveur X pour lister mes photos.
    - La liste de mes photos apparait dans gthumb, je supprime mes vieilles photos.
    - Gthumb demande à la passerelle de supprimer les photos sélectionnées.
    - La passerelle supprime les photos sélectionnées sur le serveur X.

===== Aspects techniques =====

==== La passerelle ====

La passerelle et les plugins pour les applications clientes sont prioritaires.
Le développement de la passerelle pourra se faire en C, C++ ou python.

La passerelle sera composé de :
  * Un programme central permettant la configuration des différents services
  * Pour chaque service (ou type de données) :
    * Une interface unique avec tous les clients
    * Une interface vers chaque type de serveur tiers

==== Le serveur TribU ====

L'utilisation de PHP pour le serveur TribU est très probable, car elle permettrait un déploiement facile sur une majorité d'hébergeurs.
Au lieu de tout recoder, on pourrait utiliser quelque chose déjà existant comme par exemple un CMS (drupal, phpnuke, ...).

===== Solutions existantes =====

  * Il existe un début de projet : http://icenterx.info/index.php et http://www.ubuntuforums.org/forumdisplay.php?f=129 concentré sur l'interface web.
  * Il est possible de centraliser certaines données (messagerie, mail, partage de données) par Jabber/XMPP.
  * Extension Foxmark pour Firefox fait la synchronisation de bookmarks Firefox
  * Il existe des programmes PHP pour faire des albums photos, ou des blogs. Free fait aussi des installation simplifiées, donc posibilité d'agréger des services pour les déployer rapidement.
  * Utiliser la capacité FTP Nautilus / Konqueror + script de synchronisation pour se connecter à serveur distant pour faire mise à jour si modification. On peut le faire avec des fichiers styles Mes images, Mes Documents ou avec les fichiers du home .mozilla, .evolution etc ...
  * Pour l'interface web, il existe des OS entiers qui pourrait exploiter les données synchronisées (https://www.youos.com/ http://www.eyeos.info/index.php)
  * ical ou caldav pour synchroniser le calendrier
  * IMAP pour synchroniser les mail
  * LDAP pour le carnet d'adresse.
  * Il existe des serveurs de travail colaboratif pour le partage de travail (type GroupWare).
  * Des programmes de synchronisation de fichiers ([[http://www.cis.upenn.edu/~bcpierce/unison/|Unison]], [[https://launchpad.net/distros/ubuntu/+spec/home-user-backup|home_user_backup]])

===== Organisation du projet =====

==== Gestion du site Web =====

XioNoX va s'occuper de la gestion du site Internet, en collaboration avec Emixam pour le design et le logo (voir aussi avec morphee sur le forum). On utilisera Sourceforge + un wiki (héberger chez Sourceforge). Il devra servir de point de rencontre entre les développeurs et (futurs) utilisateurs. Le wiki servira notamment pour la documentation, les idées etc ... (plus complet que Sourceforge pour cette partie).

===== Liens =====

  * https://wiki.ubuntu.com/UbuntuMac
  * http://forum.ubuntu-fr.org/viewtopic.php?id=51235&p=1
  * https://wiki.ubuntu.com/UbuntuDotNetDiscussion
  * http://www.ubuntuforums.org/showthread.php?t=189739
  * http://www.ubuntuforums.org/forumdisplay.php?f=129
  * http://icenterx.info/index.php
  * https://launchpad.net/distros/ubuntu/+spec/ubuntu-dot-mac
  * https://sourceforge.net/projects/tribu/
  * https://www.google.com/hosted/
  * http://www.roundcube.net/

===== Documents =====

  *[[http://gilir.free.fr/tribu/CR080806.odt|Compte Rendu Conférence Jabber du 08/08/2006]]

===== Personnes à Contacter =====

IDEE -> Faire une liste des developpeurs de logiciels comme gthumb(images) totem (video) afin de regrouper les personnes les mieux placés suceptibles de modifier les programmes pour incorporer des fonctions de e-publication