{{tag>Trusty émulation virtualisation}}

----

====== Utilisation de « the Qemu emulator » ======

[[http://wiki.qemu.org/Index.html|Qemu]] est un émulateur de matériel, capable de simuler une architecture x86, et partiellement les architectures PPC, ARM et SPARC.
**Qemu** émule tout, y compris le microprocesseur, c'est pourquoi il est souvent plus lent que le système hôte. Cependant, la virtualisation vous permet de rentabiliser le temps processeur libre en multipliant les OS.  D'autre part, c'est une très bonne manière d'examiner une distribution sans devoir réinstaller, formater ou partitionner. 
Il existe néanmoins:
  * une extension, nommée **kqemu**, qui vous permettra d'accélérer sensiblement les performances de cet émulateur grâce à des techniques plus avancées indépendamment de votre processeur.
  * le projet [[kvm]], basé sur Qemu, qui permet de tirer parti d'un jeu d'instruction de certains processeurs, offrant des performances redoutables lors de l'émulation d'un processeur identique à la plate-forme hôte.

Dans le même genre, il existe [[:vmware|les produits de virtualisation de VMWare]] ([[:VMWare Player]] et [[:VMWare Workstation]]) ou [[virtualbox]]. Ce dernier étant le plus simple et le plus rapide (il utilise d'ailleurs du code de qemu, mais possède une interface qui le rend plus simple à manipuler).

Dans un genre proche, il existe des systèmes de virtualisations "légers" sous linux, qui utilisent mieux les ressources des systèmes hôtes tels que  [[lxc]], [[lxd]], ainsi que des technologies proches telles que [[docker]].


===== Installation de qemu =====

[[:tutoriel:comment_installer_un_paquet|Installez le paquet]] **[[apt>qemu-kvm|qemu-kvm]]**
ou depuis raring
[[:tutoriel:comment_installer_un_paquet|Installez le paquet]] **[[apt>qemu|qemu]]**.

<note important>:-P Sous Ubuntu 14.04 la commande "qemu" ne fonctionne pas il faut utiliser "qemu-system-i386" ou "qemu-system-x86_64" ou créer le lien comme ci-dessous.</note>
Pour obtenir une compatibilité avec des scripts ou des commandes déjà existantes, il est nécessaire de recréer la commande "qemu" en fonction de votre architecture avec :
<code> sudo ln -s /usr/bin/qemu-system-i386 /usr/bin/qemu</code>
ou
<code> sudo ln -s /usr/bin/qemu-system-x86_64 /usr/bin/qemu</code>

===== Essai d'un live-cd =====


Téléchargez donc une image ISO d'un LiveCD (DSL par exemple qui est très compacte, moins de 50 Mo, ou bien sûr Ubuntu pour faire des tests avec quelques minutes d'attente pour le démarrage dans la machine virtuelle !).

Puis sans créer un CD ROM, démarrez l'ISO avec la commande suivante (à adapter) :<code>
qemu-system-i386 -cdrom /répertoire_de_l'iso/imageISO.iso -m 1024</code>

Aller dans la fenêtre de l'émulateur Qemu en cliquant dessus.

Pour quitter la console virtuelle : **Ctrl + alt**

Pour le mode plein écran (plus rapide) de Qemu : **Ctrl + alt + f**


Simple et efficace (même sans l'optimisation de kqemu). Il est possible de tester toutes sortes de distributions GNU/Linux et même d'avoir une [[https://help.ubuntu.com/community/WindowsXPUnderQemuHowTo|machine virtuelle de Microsoft Windows XP]].


===== Préparation à l'installation d'ubuntu =====

  * Téléchargez [[http://www.ubuntu-fr.org/telechargement | l'image ISO d'Ubuntu]]. Notez qu'il ne vous sera pas nécessaire de graver cette image.
   * FIXME: à vérifier. Pour obtenir la gestion de réseau pour votre système émulé, vous devez le déclarer. [[http://www.nongnu.org/qemu/qemu-doc.html#SEC29 | Le linux-test-xxx...]]  , sur le site de **qemu**, est un script à mettre parmi vos scripts réseaux. C'est une méthode simplifiée pour l'entrée dans un terminal de la commande ci-dessous :<code>
 sudo /sbin/ifconfig eth0 172.20.0.1</code>
  * Nous avons besoin également d'un disque virtuel pour notre système. Créez un disque simplement en créant un dossier de la taille souhaitée, avec la commande ci-dessous :<code>
  dd of=ubuntuimage bs=1024 seek=10485760 count=0</code>
ou avec qemu-img: <code>
 qemu-img create -f raw ubuntuimage 10G </code>

Cette commande créera un //fichier de 10 Go// qui deviendra un disque virtuel. Cette taille est exagérée si vous voulez juste essayer la distribution, une installation basique utilise environ de 1.5 Go d'espace disque, et comptez 3 à 4 Go pour le reste des fichiers.

Il est également possible d'utiliser le format qcow afin d'économiser l'espace disque consommé par le disque virtuel :<code>
qemu-img create -f qcow2 ubuntuimage 10G</code>

===== Installation d'Ubuntu=====

Lancez la commande suivante :<code>
qemu -hda ubuntuimage -cdrom ubuntu-i386.iso -m 1024 -boot d</code>

Cette commande définit le disque dur virtuel comme l'image //ubuntuimage// (créée précédemment), le cédérom avec l'image ISO de notre cédérom téléchargé //ubuntu-i386.iso// (à adapter en fonction de l'image téléchargée), indique comme taille de mémoire RAM //1024//, et enfin définit l'option de démarrage sur le lecteur //d//, qui est ici le lecteur de cédérom virtuel.

**Note**: Allouer une taille mémoire trop faible, comme trop grande, aura pour conséquence l'instabilité de votre système, ainsi que la lenteur de l'émulation. C'est pourquoi une grosse quantité de mémoire sur le système hôte est préférable

L'installation de Ubuntu devrait démarrer. L'instalation devrait se dérouler normalement exepté au redémarage où il faudra retirer l'iso :

Sortez de l'émulateur en entrant //quit// dans //the emulator console// (pour accéder à la console, appuyer sur Ctrl+Alt+2), et exécutez la commande: <code>
qemu -hda ubuntuimage -m 1024</code>

Notez que nous avons enlevé le cdrom au démarrage, ainsi l'émulateur démarrera sur l'Ubuntu du disque virtuel.

===== Usage =====

Tout d'abord, faire tourner un OS sur un émulateur matériel n'est pas le rêve, c'est simplement lent. Ne comptez pas faire des exploits mais seulement avoir un système pour des essais.

Que dire, même sur un système réduit au niveau matériel, il est cependant assez rapide pour examiner la distribution, peut-être installer quelques paquets, voir comment elle va dans l'ensemble.

C'est également un bon outil pour la gestion de système paranoïaque. **Qemu** peut avoir une image inaltérable de disque avec un dossier séparé de secours, au cas où vous voulez tester l'installation de paquets intrusifs (ou examiner vos propres paquets pour s'assurer qu'ils ne cassent pas le système) sans toucher réellement votre vrai système.

Si votre système virtuel est cassé, récupérer le fichier de secours pour redémarrer comme si rien n'était arrivé.


===== Configuration =====


==== Accès au réseau ====

Pour avoir accès au réseau depuis sa machine virtuelle il faut configurer qemu pour qu'il intègre une carte réseau dans la machine virtuelle.

Pour avoir une carte réseaux avec un chipset relativement connu ajoutez les paramètres suivants à la commande qemu:<code>-net user -net nic,model=ne2k_pci</code>
==== Partage SAMBA ====

Prérequis :
  * Avoir configuré [[samba]] correctement.
  * Connaître le chemin du partage, et le couple utilisateur/mot de passe du partage.

Vérifiez que vous pouvez vous accéder à votre partage directement sous Ubuntu (adresse smb:%%//127.0.0.1%% sous Nautilus).

Lancer qemu avec le paramètre ''-smb chemin/du/partage'' sur la ligne de commande.

Ensuite, utilisez l'adresse ''\\10.0.2.4'' sous Windows, pour accéder au même partage.
Vous pouvez aussi monter le partage pour y accéder comme un disque.




==== Périphérique USB ====

Si vous n'avez pas le fichier /dev/bus/usb/devices (bug [[https://bugs.launchpad.net/ubuntu/+source/qemu/+bug/156085|156085]]), utilisez la commande suivante :<code>
sudo mount -t usbfs none /dev/bus/usb</code>

Ensuite, utilisez la commande suivante, pour que qemu puisse prendre le contrôle des périphériques usb :<code>
sudo chown $USER -R /dev/bus/usb</code>

<note important>Pour les version antérieure à 10.10 le répertoire **/dev/bus/usb** doit être remplacé par **/proc/bus/usb**</note>

Lancez qemu en rajoutant sur la ligne de commande ''-usb'' et ''-usbdevice host:<vid>:<pid>'' où vous obtiendrez <vid>:<pid> à partir de la commande ''$ lsusb''.


==== L'ACPI ralentit énormément la machine virtuelle ====

Il faut indiquer à qemu de ne pas utiliser l'ACPI : voir [[http://kvm.qumranet.com/kvmwiki/Windows_ACPI_Workaround|ici]].<code>
-no-acpi</code>

==== Son ====
Le son ne marche en général pas avec les options par défaut. Pour activer le son il faut rajouter l'option<code>
-soundhw all</code>
à la ligne de commande

==== Allocation de mémoire vive ====
Qemu n'alloue par défaut que peu de mémoire (128 Mo). Rajouter l'option suivante pour allouer 1Go :<code>
 -m 1024</code>
N'allouez pas plus de la moitié de la mémoire de votre système. 

==== La console de qemu ====
Il est possible d'employer de nombreuses commandes via la console de qemu accessible via le raccourci  clavier CTRL+ALT+SHIFT+2 . (Pour retourner dans la vm le raccourci est CTRL+ALT+SHIFT+1)

=== Changer de cd pendant l'exécution ===
Exécutez la commande suivante dans la console qemu afin de connaître les périphériques:
<code>
(qemu) info block
</code>

Voici le résultat lorsqu'un cd-rom est déjà monté :

<code>
ide1-cd0: removable=1 locked=0 tray-open=0 io-status=ok file=cd1.iso ro=1 drv=raw encrypted=0
floppy0: removable=1 locked=0 tray-open=0 [not inserted]
sd0: removable=1 locked=0 tray-open=0 [not inserted]
</code>

Éjectez le cd (dans certains cas le nom //ide1-cd0// est à remplacer par //cdrom//) :
<code>
(qemu) eject ide1-cd0
(qemu) info block
ide1-cd0: removable=1 locked=0 tray-open=0 [not inserted]
floppy0: removable=1 locked=0 tray-open=0 [not inserted]
sd0: removable=1 locked=0 tray-open=0 [not inserted]
</code>

Montez le nouveau cd:
<code>
(qemu) change ide1-cd0 cd2.iso
(qemu) info block
ide1-cd0: removable=1 locked=0 tray-open=0 file=cd2.iso ro=1 drv=raw encrypted=0
floppy0: removable=1 locked=0 tray-open=0 [not inserted]
sd0: removable=1 locked=0 tray-open=0 [not inserted]
</code>

Cette procédure peux s'appliquer à d'autres périphériques.


==== Installer une interface graphique : qemu-launcher ====
[[:tutoriel:comment_installer_un_paquet|Installez le paquet]] [[apt://qemu-launcher|qemu-launcher]]


==== VFIO Passthrough ====

Lire la Documentation : https://doc.ubuntu-fr.org/vfio
===== Liens supplémentaires =====
  * [[http://wiki.qemu.org/Index.html|Site officiel de Qemu]]
  * Monter une image disque qcow, qed, etc directement sur l'hôte : [[http://blog.vmsplice.net/2011/02/how-to-access-virtual-machine-image.html|en utilisant qemu-nbd]].

----

//Contributeurs : Rédigé par [[contributeurs|les contributeurs d'Ubuntu-fr]], [[utilisateurs:methu|methu]] et [[utilisateurs:kmeleon|Kmeleon]], [[utilisateurs:Id2ndR]] , [[utilisateurs:dexter74|dexter74]] (VFIO).//