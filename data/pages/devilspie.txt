{{tag>personnalisation}}

----

===== Introduction =====

Devil's Pie est un logiciel qui permet de détecter les caractéristiques des fenêtres et de leur appliquer des règles de comportement. Il permet donc d'ouvrir une fenêtre sur un bureau spécifique et / ou de lui définir une option d'affichage (taille de la fenêtre, transparence, focus, minimisation ...). 
Une fois paramétré pour un logiciel donné, Devil's Pie peut s'oublier (il doit cependant être lancé en mémoire au démarrage) : on se contente de lancer le programme sur lequel on souhaite une action, et celle-ci s'applique de façon totalement transparente.

Devil's Pie marche normalement avec tous les gestionnaires de fenêtres (xfwm, metacity, compiz ...).

A noter qu'il existe une version avec interface graphique pour créer les règles de devilspie : gdevilspie ([[http://code.google.com/p/gdevilspie/]])
===== Avertissement ! =====

Devispie est un logiciel libre de **Ross Burton** (http://www.burtonini.com , <ross@burtonini.com>) publié sous la license GNU GPL.

Ce texte décrit les règles de paramétrage à **partir de la version 0.13**. Auparavant le paramétrage était totalement différent.

La version embarquée dans Ubuntu 16.10 est la 0.23-2.

A noter enfin qu'un fork de Devilspie, nommé [[http://www.gusnan.se/devilspie2/|Devilspie2]]  existe et qu'il se configure différemment, via des scripts Lua simples.

===== Installation =====

Il est possible d'installer Devil's pie à partir de l'Ubuntu store (ou de Synaptic). Le dépôt [[synaptic#ce_que_synaptic_est_capable_de_faire|"Universe" doit être activé]].

Alternativement, une installation en ligne de commande est possible en rentrant dans un terminal la commande suivante :
<code>
sudo apt-get install devilspie
</code>
ou 
<code>
sudo apt-get install gdevilspie
</code>
si vous voulez la version avec interface graphique.

===== Configuration manuelle simple  =====
L'utilisation la plus courante de devilspie, c'est d'affecter un logiciel à un bureau spécifique, ou de positionner sa fenêtre (mode "minimisé", centré, en haut à gauche, ...). Pour ce faire :

  * installer devilspie par la commande **sudo apt install devilspie** (ou passer par la logithèque).
  * Créer un répertoire caché dans le répertoire utilisateur par défaut (**/Home/vous/**), appelé **.devilspie** (pour voir les répertoires cachés : ctrl + H).
  * Dans le répertoire caché, créer un fichier par logiciel qu'on souhaite manipuler. Le fichier est un fichier texte avec un extension **.ds**  Le nom n'a pas d'importance, mais il est logique de donner le nom du programme manipulé. Par exemple **Thunderbird.ds**.
  * A l'intérieur du fichier, **on colle les commandes** pour engendrer le comportement souhaité. Voir les exemple ci-dessous.

Gardons l'exemple de Thunderbird pour la suite :

__**Démarrer Thunderbird sur le bureau 3.**__

<code>
(if 
  (is (application_name) "Thunderbird")
  (set_workspace 3)
)
</code>

__**Démarrer Thunderbird en mode minimisé**__

<code>
(if 
  (is (application_name) "Thunderbird")
  (minimize)
)
</code>
On peut remplacer (minimize) par (center) si on veut centrer la fenêtre.

__**Démarrer Thunderbird avec la fenêtre positionnée en haut à gauche**__

<code>
(if 
  (is (application_name) "Thunderbird")
  (geometry "+1+0")
)
</code>
Dans cet exemple,  "+1" positionne la fenêtre à 1 pixel du bord gauche de l'écran, et "+0" la positionne à 0 pixel du haut. La fenêtre n'a pas de dimension imposée.

Pour démarrer en haut et à **droite** de l'écran : **(geometry "-1+0")**

__**Démarrer Thunderbird avec la fenêtre positionnée en haut à gauche __ET__ avec une dimension imposée**__

<code>
(if 
  (is (application_name) "Thunderbird")
  (geometry "1200x1150+1+0")
)
</code>
Dans cet exemple,  "1200x1150" est la taille imposée à la fenêtre ; "+1+0" est sa position (en haut à gauche).

__**Démarrer Thunderbird sur le bureau 3 __ET__ en mode minimisé**__

<code>
(if 
  (is (application_name) "Thunderbird") 
  (begin (set_workspace 3) (minimize) )
)
</code>

Dans cet exemple, il y a __2 actions__ (bureau 3 ET minimiser), et elles doivent être __encadrées__ par un **(begin ...)**. (begin) est inutile pour une seule action (cf. exemples 1et 2).

__**Démarrer TOUS les logiciels avec une fenêtre centrée**__

<code>
(debug
  (center)
)
</code>

__**ASTUCE**__ : on peut avoir __un seul__ fichier de configuration pour tous ses logiciels, à condition de l'encadrer par une fonction (begin). Exemple :
<code>
(begin

  (if 
    (is (application_name) "Thunderbird") 
    (set_workspace 3)
  )

  (if 
   (is (application_name) "gmusicbrowser")
   (set_workspace 4)
  )

  (if 
    (is (application_name) "Firefox")
    (geometry "1200x1150+1+0")
  )

)
</code>
Ici, Thunderbird et gmusicbrowser sont envoyés sur 2 bureaux différents, Firefox est affiché en haut à gauche avec une fenêtre de taille 1200x1150. Comme le montre 2 des exemples plus haut, **(begin)** permet soit de regrouper plusieurs programmes dans un seul fichier, soit de regrouper plusieurs options pour un même programme.

En fonction de votre besoin, créez le nombre de fichier nécessaire (1 fichier par programme, ou un fichier global) et adaptez le **nom du programme** et le N° de bureau (**set_workspace**) qu'on trouve dans les exemples précédents.

Une fois un fichier de paramétrage créé, il faut démarrer **devilspie** pour que cela fonctionne :
  * __ponctuellement__ : ouvrir une invite de commande via alt+F2, et y taper **devilspie**.
  * __Démarrage automatique__ : gestionnaire de paramètre > Session et démarrage > ajouter une commande **devilspie** (Devilspie se lancera alors à chaque démarrage de votre session Ubuntu).

3 remarques importantes :
  * Il ne faut pas faire de faute dans le nom du logiciel, ou cela ne marchera pas.
  * Les noms de programmes sont sensibles à la casse : **F**irefox marche, mais pas firefox (sans majuscule). Certains logiciels demandent une majuscule (**F**irefox), et d'autres non (**g**musicbrowser).
  * un fois lancé, devilspie __ne prend plus en compte__ les modifications ou ajouts des fichiers **.ds**. Pour que ces modifications / ajouts prennent effet, il faut donc redémarrer devilspie (rédémarrage de session, ou pour les adeptes du terminal : **pkill devilspie** [tue le processus], suivi d'un **devilspie** [redémarre le processus]).

Pour d'autres fonctionnalités, voir les chapitres suivants.

===== Configuration avancée =====
Pour la version graphique gdevilspie, vous la trouvez dans votre menu, section accessoire.

Si les fichiers de règle ne sont pas placés dans le répertoire **~/.devilspie** mais dans  **/etc/devilspie**, les règles s'appliqueront alors à **tous** les utilisateurs. Mais les règles devront alors être manipulées en mode super-utilisateur (root).

==== Commentaires ====
Une ligne de commentaire peut-être introduite dans le code. Elle commence par un **;**

Par exemple :
<code>
; ceci est un commentaire
( if 
  ( is ( application_name ) "Thunderbird" )
  ( set_workspace 3 )
)
</code>
==== Les actions possibles ====

<file>
(debug)              # Renvoie les informations sur les fenêtres ouvertes

(maximize) (maximize_horizontally) (maximize_vertically)

(minimize)

(fullscreen)         # Plein-écran

(center)             # Centre la fenêtre sur l'écran

(geometry largeur[x]hauteur[+]abcisse[+]ordonnée)

  * (geometry "400x200+0+0") # Placera la fenêtre en 400 de large par 200 de haut en haut à gauche

  * (geometry "400x200")

  * (geometry "+10+10")

(set_workspace 2)    # Déplace la fenêtre vers le bureau n° 2
(set_viewport 2)     # Déplace la fenêtre vers le bureau n° 2 (Compiz)

(change_workspace 2) # Affiche le bureau n°2

(pin)                # Rend la fenêtre présente sur tous les bureaux
(stick)              # Rend la fenêtre présente sur tous les bureaux (Compiz)

(opacity 80)         # Donne une opacité à 80%

(above)              # Met la fenêtre en avant-plan

(focus)              # Met le focus sur la fenêtre

(undecorate)         # Supprime les décorations du gestionnaire de fenêtres (Barre de titre et bordures)
</file>

Par exemple faire apparaître [[gedit|Gedit]] sur TOUS les bureaux (option **pin** - le contenu de chaque fenêtre sera identique aux autres) :
<code>
; Duplique la fenêtre Gedit sur chaque bureau
( if 
  ( is ( application_name ) "Gedit" )
  ( pin )
)
</code>

Placer systématiquement [[firefox|Firefox]] en haut à gauche ("+0+0"), avec une largeur de 1300 px et une hauteur de 1150 px ("1200x1150") :
<code>
; Positionne les fenêtres Firefox en haut à gauche et avec une certaine taille
( if 
  ( is ( application_name ) "Firefox" )
  (geometry "1200x1150+0+0")
)
</code>
==== Syntaxe des règles ====

La règle et ses éléments doivent être entre parenthèses : **//(règle)//**

La règle peut être :

  * une simple action (elle s'applique alors à toutes les fenêtres) : **//(debug)//** ou
  * une condition : **//(if (condition) (action))//** : si la condition est vraie alors l'action est réalisée par devilspie.

//(if (is (application_name) "gThumb") (maximize))//
(si l'application qui ouvre la fenêtre est gThumb alors devilspie va maximiser la fenêtre).

La condition peut être :
  * **is** (identité)
  * **contains** (contient) ou
  * **matches** (indique que le second terme de la condition est une expression régulière).

L'objet de la condition peut être :
  * **application_name**
  * **window_name** ou
  * **window_role**

Il peut être utile de combiner des conditions, par exemple traiter toutes les fenêtres de Firefox dont le titre contient ubuntu ; on peut à cet effet utiliser **and** et **or**.

//(and (is (application_name) "Firefox") (contains (window_name) "Ubuntu"))//

De la même façon, on peut faire appliquer plusieurs actions en faisant débuter la liste par **begin** :

//(if (is (application_name) "gThumb") (begin (maximize) (set_workspace 4)))//

Quand une action comporte un argument l'ensemble doit être entre parenthèses.

==== Obtenir le nom d'une application ====

Pour obtenir le nom exacte d'une application (à utiliser avec application_name) il vous suffit de créer un fichier ~/.devilspie/debug.ds et d'y ajouter :
''(debug)''

Ensuite, lancez "devilspie -d" dans une console et observez les lignes apparaissant à l'écran lorsque vous lancez une application. Exemple pour Firefox :
''Window Title: 'Mozilla Firefox Beta 1'; Application Name: 'Firefox'; Class: 'Firefox-bin'; Geometry: 1014x692+5+46''

La partie à retenir est : "Application Name: 'Firefox'".

pour finir voici un exemple avec gajim qui associe and et or :

<file>
(if
  (and (contains (application_name) "gajim.py") (or(contains(window_name) "salon 1") (contains(window_name) "salon 2")))
    (begin
    (set_workspace 1)
    (below)
    (undecorate)
    (skip_pager)
    (skip_tasklist)
    (wintype "utility")
    (geometry "900x450+375+55")
  )
)
</file>

===== Astuces =====

Il est possible d'avoir plusieurs règles dans un seul fichier. Il faut pour cela englober les règles dans un "begin" général.
<file>
(begin
  (if (contains (application_name) "toto")
      (begin (set_workspace 1)
             (geometry "+0+0")))
      
  (if (contains (application_name) "titi")
      ...)
      
  ....
)
</file>

Si vous désirez avoir une application sur tous les bureaux en utilisant Compiz, utilisez les éléments suivants :
<file>
(stick)
(wintype "dock")
</file>
Pour Metacity :
<file>
(pin)
(wintype "desktop")
</file>

Si vous voulez lancer une application sur un bureau précis en utilisant Compiz (__**X** est le numéro du bureau visé__) :
<file>
(set_viewport X)
</file>
Pour Metacity :
<file>
(set_workspace X)
</file>

<note tip>si set_viewport ne fonctionne pas il y a une autre solution, il suffit de savoir que compiz n'est en fait qu'un seul bureau exemple :
pour un bureau de 800x600 compiz le considère comme un bureau de 3200x600, donc si je veux ouvrir mon application sur le second bureau (geometry "800x600+800+0").</note>

===== Problèmes connus =====

Si l'application ne se lance pas, Appuyez sur ALT+F2, ouvrez avec les droits d'administrateur le fichier: /usr/bin/gdevilspie. Cherchez a ligne contenant "self.UpdateAutostartStatus()" et commentez la en tapant un dièse en début de ligne (ce qui donne "# self.UpdateAutostartStatus()" sans les guillemets). Enregistrer le fichier et relancer gdevilpsie. (Merci à [[http://community.linuxmint.com/user/view/73879|hrvooje]] de la communauté de Linux Mint)

Un changement de paramétrage n'est pris en compte qu'après un redémarrage de devilspie. Le plus simple est de redémarrer la session.
 
===== Liens =====
  * [[http://www.gusnan.se/devilspie2/|Le site officiel de Devilspie2]].

Ancienne version (Devilspie1)
  * http://ubuntuforums.org/showthread.php?t=75749
   * http://live.gnome.org/DevilsPie

----

//Contributeur : [[utilisateurs:epictete]], [[utilisateurs:mcpeter|McPeter]], [[utilisateurs:ljere|ljere]], [[utilisateurs:Fenouille84]]//