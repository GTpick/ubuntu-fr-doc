{{tag>CAO conception_electronique}}

====== gEDA ======

Logiciels de [[cao|Conception Assistée par Ordinateur]] pour les circuits électriques et électroniques 2D.

===== Installation =====
Ce logiciel est présent dans les dépôts: il suffit [[:tutoriel:comment_installer_un_paquet|d'installer le paquet]] **geda** [[apt://geda|{{apt.png}}]]

===== Utilisation =====
Tiré du site : [[http://fr.wikipedia.org/wiki/Geda|WikiPédia]]

« gEDA est une suite de logiciels libres sous licence GNU gpl version 2. Cette suite est destinée au développement en électronique sur système Linux. Ces outils sont utilisés pour le dessin de circuit imprimé, la capture de schémas et la simulation, ceci autant pour le prototypage que pour la production. 

==== Composants principaux de gEDA ====

Il est composé d'une suite d'outils dont:

    * gschem, l'éditeur de schémas,
    * gnetlist, un translateur vers d'autres utilitaires,
    * PCB, un outil de dessins de circuits imprimés,
    * gspice le simulateur électronique qui utilise :
      * [[ngspice]], un clone de spice avec des fonctions étendues, 
      * gnucap. un simulateur original avec compilateur de modèles.

D'autres logiciels comme gerbv, un visualiseur de fichier gerber, ou gsch2pcb, lequel permet d'annoter automatiquement les circuits imprimés suite à des modifications de schémas, complètent cette suite de logiciel afin d'en faire un ensemble complet.

La dernière version de gEDA comprend aussi gspiceui, une interface graphique pour ngspice et gnucap, ainsi que wcalc, un logiciel d'analyse de lignes de transmission et de structures électromagnétiques.

Un compilateur Verilog, Icarus Verilog, et ltspice, une version de spice destinée aux simulations répétitives, peuvent être intégré facilement à gEDA.

Un programme d'installation est aussi compris dans la suite, et il automatise entièrement l'installation de l'ensemble sous Linux.

==== Particularités de gEDA ====

Une des particularités principales de Geda est que cette suite de logiciels utilise un format de fichier unique pour tous les fichiers créés et utilisée par ces différents composant: (.sch), lequel est une variante de l'ascii. Il est ainsi très facile de comprendre ces fichiers et de créer des scripts pour automatiser les tâches répétitives.

D'autres particularités importantes sont que tous les outils de gEDA collaborent les uns avec les autres et qu'ils n'ont aucune limitation. Il est également possible de modifier ces outils ou de les utiliser avec des scripts pour automatiser des tâches répétitives.

Une interface graphique regroupe une partie des programmes, cependant cette interface n'est pas aussi complete que celle de suites logicielles commerciales comme Cadence. Ce sera la principale différence pour un débutant, lequel devra comprendre le rôle de chaque programme dans la suite pour pouvoir en tirer le maximum. Ce manque d'une interface graphique est compensé par la souplesse des programmes qui laisse une liberté complète de choix à l'utilisateur. »

===== Exemple d'édition dans gschema ===== 

Lancez gschema dans le menu sous KDE //K -> Éducation -> Science -> gEDA Schematic Editor (gschem)//

Nous allons réaliser le schéma ci dessous :

{{:geda:gschem.png|}}

Sélectionnez le menu //Ajouter -> Composant...//

{{:geda:gschem_simu1.png|}}

//Cliquez gauche// dans l'onglet **Bibliothèques**, puis dans **Basic Devices**.

{{:geda:gschem_biblio.png|}}

Ajoutez la sélection sur le schéma avec un //click gauche// de la souris.

Bibliothèque **Basic Devices**
  * capacitor-1.sym
  * resistor-2.sym
  * voltage-1.sym

Cliquez sur la bibliothèque **SPICE simulation elements**, choisissez **gnucap-include-1.sym** et ajoutez le symbole au schéma. 

{{:geda:gschem_simu2.png|}}

A l'aide du menu Édition disposez et arrangez les symboles électroniques en les sélectionnant //clic gauche//.

A l'aide du menu //Ajouter -> Piste// connectez les éléments entre eux (//Clic droit// pour connecter, //clic gauche// pour arrêter).

Puis en sélectionnant à la souris //clic gauche// chaque symbole et //clic droit// **Éditer...** ajoutez la **valeur** à l'attribut de nom **valeur** comme suit et attribuer un nom à chaque composant : champ **refdes**.

{{:geda:gschem1.png|}}

{{:geda:gschem_edit_Valim.png|}}

{{:geda:gschem_edit_C1.png|}}

{{:geda:gschem_edit_R1.png|}}

{{:geda:gschem_edit_simu.png|}}

==Equipotentielles==

<note important>Pour que la simulation fonctionne il est impératif qu'une des équipotentielles (les connexions) ait un **netname** de valeur égale à **0** (zéro)</note>

Sélectionnez avec la souris //clic gauche// une ligne de connexion entre **Valim** et **R1**, //clic droit// **Éditer...** modifiez la comme suit 

{{:geda:gschem_edit_conn0.png|}}

Ce nœud servira d'équipotentielle de référence.

Idem pour une ligne entre **Valim** et **C1**

{{:geda:gschem_edit_connN0.png|}}

Idem pour une ligne entre **C1** et **R1**

{{:geda:gschem_edit_connN1.png|}}

Pour effectuer la simulation ci dessous, sauvegardez dans le répertoire **$HOME/Documents/examples/test** avec le nom **test.sch**





===== Exemple de simulation dans ngspice =====

Création du netlist de simulation pour ngspice
<code bash>
cd Documents/examples/test
gnetlist -g drc2 -o drc_output.txt test.sch
</code>

<code>
gEDA/gnetlist version 1.4.3.20081231                                              
gEDA/gnetlist comes with ABSOLUTELY NO WARRANTY; see COPYING for more details.    
This is free software, and you are welcome to redistribute it under certain       
conditions; please see the COPYING file for more details.                         

Remember to check that your schematic has no errors using the drc2 backend.
You can do it running 'gnetlist -g drc2 your_schematic.sch -o drc_output.txt'
and seeing the contents of the file drc_output.txt.                          

Loading schematic [/home/franc/Documents/examples/test/test.sch]
</code>

<code bash>
cat drc_output.txt
</code>

<code>
Checking non-numbered parts...                            

Checking duplicated references...

Checking nets with only one connection...

Checking pins without the 'pintype' attribute...

Checking type of pins connected to a net...

Checking unconnected pins...

Checking slots...

Checking duplicated slots...

Checking unused slots...

No warnings found. 
No errors found.
</code>

<code bash>
gnetlist -g spice-sdb -o test.net test.sch
</code>

<code>
Command line passed = gnetlist -g spice-sdb -o test.net test.sch                 
gEDA/gnetlist version 1.4.3.20081231                                             
gEDA/gnetlist comes with ABSOLUTELY NO WARRANTY; see COPYING for more details.
This is free software, and you are welcome to redistribute it under certain
conditions; please see the COPYING file for more details.

Remember to check that your schematic has no errors using the drc2 backend.
You can do it running 'gnetlist -g drc2 your_schematic.sch -o drc_output.txt'
and seeing the contents of the file drc_output.txt.

Loading schematic [/home/franc/Documents/examples/test/test.sch]
Using SPICE backend by SDB -- Version of 4.28.2007
schematic-type = normal schematic
</code>

<code bash>
cat test.net
</code>

<code>
* gnetlist -g spice-sdb -o test.net test.sch
*********************************************************
* Spice file generated by gnetlist                      *
* spice-sdb version 4.28.2007 by SDB --                 *
* provides advanced spice netlisting capability.        *
* Documentation at http://www.brorson.com/gEDA/SPICE/   *
*********************************************************
*==============  Begin SPICE netlist of main design ============
.INCLUDE ./Simulation.cmd
C1 n0 n1 3.3nF
Valim 0 n0 SIN(0 10 1kHz)
R1 0 n1 1k
.end
</code>

Éditez le fichier de simulation

<code bash>
nano Simulation.cmd
</code>

<code>
.op
.tran 0.01ms 5ms
.print U(Valim)
</code>

Puis lancer la simulation avec [[ngspice]] par exemple

<code bash>
ngspice test.net
</code>

<code>
******                                                                                                 
** ngspice-20 : Circuit level simulation program                                                       
** The U. C. Berkeley CAD Group                                                                        
** Copyright 1985-1994, Regents of the University of California.                                       
** Please submit bug-reports to: ngspice-bugs@lists.sourceforge.net                                    
** Creation Date: Wed Dec 16 22:39:18 UTC 2009                                                         
******                                                                                                 

Circuit: * gnetlist -g spice-sdb -o test.net test.sch

ngspice 1 -> run
Doing analysis at TEMP = 27.000000 and TNOM = 27.000000

Warning: valim: no DC value, transient time 0 value used


No. of Data Rows : 1

Initial Transient Solution
--------------------------

Node                                   Voltage
----                                   -------
n0                                           0
n1                                           0
valim#branch                                 0



No. of Data Rows : 519

ngspice 2 -> plot n0 n1 valim#branch
ngspice 3 ->
</code>

{{:geda:gschem_simulation.png|}}

Voir [[ngspice]] pour plus d'informations

===== Désinstallation =====
Il suffit de désinstaller le paquet **geda**.



====Voir aussi ====


  *Site officiel : [[http://www.geda.seul.org/|geda.seul.org]]
  * Portail [[Conception Electronique]]

----

//Contributeurs : [[:utilisateurs/lami|L'ami René]] (Auteur), [[:utilisateurs/YannUbuntu]], [[:utilisateurs/Sefran|SERRES Franc]].//