{{tag>Trusty Precise lecteur_audio}}

------


====== Quod Libet : lecteur audio ======

**Quod Libet** est un [[:lecteur audio]] écrit en Python et basé sur GTK+. Il est conçu autour de l'idée que vous savez mieux que nous comment organiser votre musique. Il vous laisse gérer des listes de lecture basés sur des expressions rationnelles (ne vous inquiétez pas, les recherches classiques marchent aussi). Il vous laisse afficher et éditer n'importe quel //[[wpfr>ID3|tag]]// d'un fichier audio, et pour n'importe quel format supporté : mod, mp3, mp4, mpc, spc, trueaudio, wav, wavpack, wma, xiph (ogg Vorbis, flac, speex, ...).

**Quod Libet** gère allègrement une bibliothèque de plusieurs milliers de chansons. Il dispose également de la plupart des fonctionnalités que l'on peut exiger d'un lecteur audio moderne : support d'Unicode, touches multimédia, édition des //tags//, //etc//.
===== Pré-requis =====
 
  * Disposer des [[:sudo|droits d'administration]].
  * Disposer d'une connexion à Internet configurée et activée.

===== Installation =====

Il vous suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>quodlibet]]**.

===== Utilisation =====
Pour lancer l'application faites une recherche dans [[unity#tableau_de_bord_dash|le tableau de bord Unity]] avec le mot clé **Quodlibet**.


=====Configuration =====
====Fonctionnalités====
Voici une liste non-exhaustive des fonctionnalités disponibles:

{{ quodlibet.png?400|Capture d'écran d'une interface possible (ici iTunes-like)}}

  * Lecture Audio : Support du ReplayGain, support des touches multimédia, un vrai mode aléatoire, qui joue la liste entière avant de la répéter, un mode aléatoire pondéré (par vos notes), un support de "précédent" correct en mode aléatoire, une file d'attente, signets à l'intérieur d'un fichier (ou des playlists, grâce à un plugin)  ;
  * Édition des tags : support complet d'Unicode, changement simultané sur plusieurs fichiers, changement transparent quelque soit le format, étiquetage automatique en fonction du nom des fichiers, renommage des fichiers en fonction de leurs tags, pas d'horribles syntaxes %a, %t ; d'horribles, mais plus lisibles, syntaxes <artist>, <title>, re-numérotation rapide des fichiers ;
  * Bibliothèque audio : surveille automatiquement les changement à vos fichiers, retrait automatique des chansons qui ne sont plus là (disques amovibles, etc.), sauvegarde des notes et du nombre de lecture, téléchargement et sauvegarde des paroles ;
  * Support des Radios Internet ("Shoutcast") ;
  * Support des flux Audio ("Podcast") ;
  * Interface utilisateur : simple, joue juste la chanson que vous voulez, utile, avec un petite ou une grande fenêtre, on n'est pas à l'étroit, il n'y a pas de place perdue, affichage des couvertures d'album, contrôle à partir d'une icône dans la barre de notification, reconnaît et affiche n'importe quelle étiquette, même une que vous avez personnellement créé,
  * Plusieurs manières de naviguer dans votre bibliothèque: recherches simples ou avec des expressions rationnelles, avec des listes de lecture, à la iTunes/[[:Rhythmbox]], mais avec n'importe quelle étiquette si vous le voulez, par album (avec affichage de la couverture), par dossier, y compris les fichiers qui ne sont pas dans votre bibliothèque,
  * Plugins Python : étiquetage automatique via MusicBrainz et CDDB, support d'un [[wpfr>Menu_à_l%27écran|OSD (On-screen display)]], compatible Last.fm/AudioScrobbler, conversion de l'encodage des tags;
  * Formats: MP3, Ogg Vorbis, FLAC, Musepack, MOD/XM/IT, Wavpack, MPEG-4 AAC ;
  * Contrôle de la lecture et du statut à partir de la [[:commande_shell|ligne de commande]].

Pour accéder le plus simplement possible à vos contenus, choisissez, dans "affichage", "liste des albums".

<note tip>
Lorsque vous tapez quelques lettres dans la barre de recherche, Quodlibet opère une recherche dans le nom de l'artiste, le nom du compositeur //et// celui de l'album, en ignorant tous les autres champs.

Pour une recherche par titre ou par genre, tapez "title = ..." ou "genre = ..."
</note>


====L'éditeur de tags de Quodlibet/ExFalso [pour les mélomanes]====
L'utilisation avancée de l'éditeur de tags de Quodlibet/ExFalso permet, couplée avec l'utilisation d'une application telle que Minimserver, d'exploiter toute la puissance des tags. Ceci est particulièrement intéressant pour ceux qui possèdent une grande bibliothèque, et/ou pour la musique classique.

Pour commencer, il faut savoir que l'éditeur de tags de Quodlibet est identique à celui d'Ex Falso. La seule différence entre les deux est que Quodlibet fonctionne en mode bibliothèque, et ExFalso en mode navigateur. Pour taguer un répertoire avec Quodlibet, il faudra l'ajouter à la bibliothèque. Gros avantage: tous les tags de la bibiothèque sont mémorisés. C'est très intéressant, car au lieu de taper 387 fois le même nom de compositeur, il suffit de le sélectionner dans une liste déroulante.

<note tip>
Les tags de la bibliothèque restent mémorisés même si vos fichiers audio se trouvent sur un disque externe et que celui-ci est débranché. Si cependant votre bibliothèque reste invisible, il faut aller dans l'onglet "Préférences=>Bibliothèque". Sélectionnez votre disque externe, puis cliquez sur le bouton "Unhide".
</note>


Voilà quelques fonctionnalités:

  * Multitags: il est intéressant que chaque interprète ait un tag séparé. Par exemple, au lieu d'avoir

artist=Martha Argerich, Orchestre Philharmonique de Berlin, Claudio Abbado, 

on aura:

artist=Martha Argerich

artist=Orchestre Philharmonique de Berlin

artist=Claudio Abbado

Pour cela, inscrivez les noms des interprètes dans le champ "artist", en les séparant par des virgules. Faites ensuite un clic-droit dans le champ, et choisissez "séparer en plusieurs valeurs". La prochaine fois que vous voudrez taguer un disque de la grande Martha, vous n'aurez plus qu'à sélectionner son nom dans la liste déroulante qui s'affichera dès que vous aurez tapé la lettre M.

  * Importation/Exportation des tags vers un fichier texte, au moyen des greffons "Import Metadata" et "Export Metadata". Permet de gagner un temps précieux lorsque vous possédez plusieurs interprétations de la même oeuvre.

  * Tags personnalisés

Vous utilisez Minimserver, et pilotez la lecture au moyen de BubbleUpnp ou d'une autre application du même type. Vous voudriez pouvoir afficher très simplement, par exemple, tous les concertos (quel intérêt? La recherche portera sur une petite partie de votre bibliothèque et non sur la totalité, ce qui est beaucoup plus rapide).

Il suffit de créer un tag "concerto" et de lui attribuer la valeur "1" ( pour savoir comment afficher ce tag, se référer à la documentation de Minimserver).

<note warning>
A signaler un vilain bug de Quodlibet: lorsque vous opérez des modifications portant sur les tags de plusieurs albums, il peut être tentant de sélectionner ces albums au moyen d'un filtre (en tapant un nom d'artiste dans la barre de recherche par exemple); puis de sélectionner la totalité des albums filtrés au moyen de la combinaison de touches "Ctrl+A". Attention, n'oubliez pas dans ce cas de désélectionner la première ligne, celle qui affiche "Tous les albums" avec le nombre d'albums. Dans le cas contraire, //vous risquez de voir disparaître par magie tout le contenu du tag "title" de tous vos albums, sans aucune possibilité de retour en arrière.//
</note>


==== Plugin musicbrainz ====

Un plugin permettant l'étiquetage automatique depuis musicbrainz est disponible en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **[[apt>python-musicbrainz2]]**.

===== Références =====
  * [[https://quodlibet.readthedocs.org/en/latest/guide/index.html|Le Guide de Quod Libet]] (en)
  * [[:exfalso|La page sur Ex Falso]], l'éditeur de tag associé à Quod Libet (fr)

----


//Contributeurs : [[:utilisateurs:thedamocles|Damocles]], MAJ : [[:utilisateurs:l_africain|L'Africain]] //