{{tag>matériel carte_graphique nvidia}}

----

{{ :nvidia:nvidia_logo.png?150&nolink|NVIDIA}}
====== Cartes graphiques NVIDIA ======

Comme tout périphérique, une carte graphique a besoin de pilotes pour fonctionner. Il existe un pilote [[wpfr>Logiciel_libre|libre]] et un pilote [[wpfr>Logiciel_propriétaire|propriétaire]] pour les cartes graphiques **NVIDIA**.

<note important>**ces informations ne sont plus d'actualité (17.04) ... ATTENTION** : Si votre ordinateur dispose de la [[:nvidia_optimus|technologie Optimus]], il n'est pas recommandé d'installer le pilote propriétaire Nvidia fourni dans les dépôts Ubuntu (ou ailleurs). Allez sur la page du [[:bumblebee|projet Bumblebee]], qui vous permettra d'utiliser correctement l'accélération 3D.
Il vous est également possible de désactiver la technologie Optimus dans votre BIOS, et dans ce cas vous pourrez utiliser les drivers ci-dessous (attention toutefois à vérifier quelle carte graphique est active).</note>
=====Identifier sa carte graphique=====
Avant de continuer plus loin, il peut être intéressant de connaître sa carte graphique. Pour cela, voir [[:carte_graphique#identifier_sa_carte_graphique|identifier sa carte graphique]].
===== Pilote libre =====

Le //pilote libre//, du nom de **nouveau**, (pour le différencier de l'ancien :-) ) est utilisé par défaut sur Ubuntu.\\
L'utilisation de ce pilote est recommandée par la communauté des logiciels libres. Ils sont par nature mieux intégrés à **Ubuntu** que les pilotes propriétaires, mais il peut y avoir des lacunes dues aux délais de développement et aux spécifications non publiées par NVIDIA.\\
Cela dit ; grâce à l'avancée dans le développement de ce pilote, l'accélération matérielle et la 3D seraient sur le point de rattraper les performances du pilote propriétaire. Information à prendre avec réserve, puisque ce n'est pour le moment que le cas sur certains tests, sur certaines cartes graphiques.\\
(Sources des tests : [[http://www.phoronix.com/scan.php?page=news_item&px=OTIzMg|Phoronix]])

À noter, si la version du pilote libre ne convenait pas (cas d'une carte récente pas encore prise en charge), il est possible d'obtenir une version plus récente développée par la [[wpfr>X.org|Fondation Xorg]] à l'aide du [[#via un PPA|PPA proposé au chapitre d'installation du pilote propriétaire]].

===== Installation du pilote propriétaire =====
=== Pré-requis ===
  * Disposer des [[:sudo|droits d'administration]].
  * Disposer d'une connexion à Internet configurée et activée.

<note warning> Si vous disposez d'une version précédente du pilote propriétaire, vous devez le [[#désinstallation|désinstaller]] (est-ce ce lien ?: #desinstallation_des_pilotes_proprietaires) avant de commencer.
</note>

====Via les dépôts Ubuntu ====

<note warning>Sous Kubuntu 16.04 (et je précise bien Kubuntu, donc, avec environnement KDE), cette méthode ne fonctionne pas suite à un bug : https://bugs.launchpad.net/ubuntu/+source/libqapt/+bug/1530523
Il faudra effectuer l'opération via le terminal (voir section **3.2 Via un PPA**).
</note>
<note tip>Cette méthode est vivement recommandée pour l'installation du pilote propriétaire. C'est la méthode la plus simple qui utilise des pilotes spécialement empaquetés et testés pour **Ubuntu** et dont les mises à jour seront proposées automatiquement.</note>
<note help>La version du pilote propriétaire des dépôts Ubuntu peut ne pas prendre correctement en charge votre carte graphique NVIDIA. Vous pouvez alors installer depuis un [[#via un PPA|PPA]] une version plus récente développée par [[wpfr>X.org]] fonctionnant avec [[wpfr>GNU/Linux]] (Voir la procédure au chapitre [[#via un PPA]]) ou encore si cela ne convenait toujours pas, installer le tout dernier pilote depuis le site officiel. (Voir la procédure au chapitre [[#via le site officiel]]).</note>


Pour installer le pilote NVIDIA propriétaire, il est vivement recommandé d'utiliser le [[:gestionnaire de pilotes propriétaires]]. \\
Une fois [[:[[:gestionnaire de pilotes propriétaires#lancement|lancé]], plusieurs choix de versions peuvent être disponibles.\\
<note>
  * Si **aucun choix n'est disponible**, c'est que la version du pilote NVIDIA des dépôts n'est pas ou n'est plus compatible avec votre carte. Ne tentez pas alors d'installer le pilote à l'aide d'un autre [[:gestionnaire de paquets]]. Si vraiment le pilote libre en place ne vous satisfait pas, essayez plutôt une mise à jour [[#Via un PPA]] ou une installation [[#via le site officiel]].\\
  * Si la liste est toujours vide après la mise à jour des dépôts ou si vous ne voyez pas apparaître le pilote souhaité, ou bien si l'installation via le gestionnaire plante, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>nvidia-common]]** et rafraîchissez la liste des paquets.\\
Retournez ensuite dans le [[:gestionnaire_de_pilotes_proprietaires|gestionnaire de pilotes propriétaires]]. Normalement, le pilote doit apparaître.\\
  * Si la liste des choix est toujours vide après ces manipulations, parlez-en dans la section « [[http://forum.ubuntu-fr.org/viewforum.php?id=27|Serveurs graphiques et cartes vidéo]] » du forum.
</note>


{{:nvidia:pilotesadditionnels_nvidia_trusty.png?direct&700|Gestionnaire de pilotes propriétaire Nvidia}} 
  - Choisir le pilote propriétaire désiré; 
  - "Appliquer les changements" (ou "activez" sur l'ancienne version du gestionnaire) 
  - Fermer le gestionnaire;
  - Redémarrer votre ordinateur.

<note>Parfois après l'activation du pilote et le redémarrage, l'utilitaire affiche :"Ce pilote est activé mais n'est pas actuellement utilisé." En fait il marche très bien, le bureau [[:Unity]] s'active normalement.</note>

==== Via un PPA ====
//(Ce PPA fonctionne aussi pour le pilote libre "nouveau".)//
<note important>L'installation des paquets hors des dépôts officiels peut rendre instable votre système</note>
Une mise à jour vers des versions plus récentes des pilotes NVIDIA installés est disponible depuis un [[:PPA]] maintenu par la [[wpfr>x.org|Fondation X.Org]] .\\
__À noter__: Ce dernier est destiné à être utilisé comme un tout. N'installez pas de paquets individuellement mais ajouter seulement ce [[:PPA]] à vos sources de logiciels et laissez votre [[:gestionnaire de paquets]] faire la mise à jour. (Informations complémentaires disponibles sur [[https://launchpad.net/~xorg-edgers/+archive/ubuntu/ppa| la page launchpad du PPA.]] **(en)**).\\

__**Pour une première installation des pilotes Nvidia :**__

   - [[:PPA|Ajoutez le PPA]] **ppa:graphics-drivers/ppa**((https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa)) à vos sources de logiciels;
   - [[:tutoriel:comment_modifier_sources_maj#recharger_la_liste_des_paquets|Rechargez la liste des paquets]];
   - Recherchez le pilote le plus adapté (driver recommended);
   - Installez ce pilote;
Depuis un [[:terminal]] il faut saisir les [[:commande_shell|commandes]] suivantes:
 <code>
sudo add-apt-repository ppa:graphics-drivers/ppa 
sudo apt-get update 
ubuntu-drivers devices  
sudo apt-get install nvidia-(numéro du pilote)
</code> 

Il faut ensuite redémarrer votre ordinateur pour prendre en compte le nouveau pilote.


__**Pour une mise à jour d'un pilote Nvidia déjà installé vers la dernière version disponible proposée par la** [[wpfr>x.org|Fondation X.Org]]:__
  - [[:PPA|Ajoutez le PPA]] **ppa:graphics-drivers/ppa**((https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa)) à vos sources de logiciels;
  - [[:gestionnaire_de_mises_a_jour|Mettez à jour les logiciels]];
Ou depuis un [[:terminal]] en saisissant les [[:commande_shell|commandes]] suivantes:
 <code>
sudo add-apt-repository ppa:graphics-drivers/ppa 
sudo apt-get update && sudo apt-get upgrade 
</code> 
Une fois terminé, pour prendre en compte les nouvelles versions, redémarrez votre ordinateur.  

====Via le site officiel ====
Si l'installation du pilote propriétaire puis sa mise à jour via le PPA ci-dessous ne vous convient pas ou si vous avez besoin de la toute dernière version pour faire fonctionner correctement votre carte graphique (carte très récente ou un peu ancienne), il est possible d'utiliser la toute dernière version du pilote disponible depuis le site officiel Nvidia.\\
<note important>
L'installation de la version du pilote via le site officiel %%NVIDIA%% est déconseillée car il n'a pas été empaqueté ni adapté pour **Ubuntu** et peut rendre instable votre système.\\
De plus, contrairement à une installation via les [[:dépôts]], le [[:tutoriel/tout_savoir_sur_les_modules_linux|module]] du pilote ainsi installé ne sera pas chargé dynamiquement. C'est à dire qu'à chaque mise à jour du [[wpfr>noyau Linux]] vous devrez le ré-installer.</note>

  - Si  un pilote propriétaire est utilisé, [[#désinstallation des pilotes propriétaires|désinstallez-le]].
  - Télécharger le pilote disponible sur [[http://www.nvidia.fr/Download/index.aspx?lang=fr|cette page]] en mode manuel. 
Puis dans un [[:terminal]] à l'aide des [[:commande_shell|commandes]] suivantes
  - Déplacez-vous dans le dossier du téléchargement (exemple pour le dossier "Téléchargements"): <code>cd Téléchargements</code>
  - Rendre ce fichier exécutable <code>chmod +x NVIDIA-linux*</code>
  - Exécuter l'installateur <code>sudo ./NVIDIA-linux*</code>
  - Suivre les instructions;
  - Redémarrez votre ordinateur pour qu'il puisse prendre en compte le nouveau pilote.
 (Une fois l'installation terminée, conservez le fichier téléchargé, il vous sera utile pour le réinstaller en cas de mise à jour du noyau linux ).\\
Il ne vous reste plus qu'à [[#Configuration|configurer votre carte]].


===Changement de version du noyau Linux===
Une fois la [[:gestionnaire_de_mises_a_jour|mise à jour]] du [[:kernel|noyau]] faite et __AVANT__ le redémarrage de l’ordinateur, [[#désinstallation des pilotes propriétaires|désinstallez le pilote]] puis ré-installez-le suivant la méthode décrite ci-dessus. Vous pouvez alors redémarrer.\\
Si par inadvertance vous avez redémarré votre ordinateur avant cela, aucun module de pilote vidéo ne sera chargé dans le nouveau noyau. Vous vous retrouverez alors devant un écran noir. Pas de panique, il suffit simplement de:
  - Redémarrer sur l'ancien noyau en choisissant celui-ci depuis le [[:grub-Pc|Grub]], puis de 
  - [[#désinstallation des pilotes propriétaires|Désinstaller]] et ré-installer le pilote.


===== Configuration =====

==== Nvidia-settings ====

**Nvidia-settings** est un outil pour configurer les pilotes **NVIDIA** sous Linux. Il est normalement installé par défaut avec le pilote propriétaire. Si ce n'était pas le cas, il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>nvidia-settings]]**

Il permet entre autre de :
  * Changer la résolution et la fréquence de l'écran ;
  * Configurer plusieurs écrans (en clone ou en //twinview//) ;
  * Changer la luminosité, le contraste, le //gamma// ;
  * Activer la synchronisation verticale ;
  * Modifier le niveau d'anticrénelage ou d'anisotropie ;
  * Connaître la température de la carte graphique ;

{{ nvidia:nvidia_x_server_settings_100.14.19.png?600 |nvidia-settings}}


  * Lancer l'application depuis le [[:unity#tableau_de_bord_dash|tableau de bord]] d'Unity avec le mot clé "NVIDIA".
  * Ou dans un [[:terminal]], saisir la [[:commande_shell|commande]] suivante: <code>nvidia-settings</code> ou en mode [[:sudo|administrateur]] // (Certains changements ne sont possibles que dans ce mode)//: <code>sudo nvidia-settings</code>


=== Options principales ===

<note important>Certaines options peuvent n'avoir aucun effet sur certaines anciennes cartes (qui ne supportent pas le filtrage par exemple).</note>

Ces options seront prises en compte au prochain démarrage de l'application 3D.

== Synchronisation verticale ==

Dans //OpenGL settings//, il est conseillé d'activer la case **Sync to VBlank**, qui permet de synchroniser l'affichage avec la fréquence verticale de l'écran.

Cela a deux effets bénéfiques :
  * Si l'écran est à 60 Hz, pas besoin de dessiner 1300 images par seconde et faire tourner les ventilateurs à fond, 60 suffisent ;
  * Sans cette option, il arrive que l'écran dessine réellement l'image alors que la carte graphique est en train d'écrire une nouvelle image, ce qui provoque des effets de « déchirement » :
{{ tearing-effect.png |Effet de déchirement}}

Cependant, activer cette option ne résout pas TOUS les problèmes de déchirement. Regardez [[http://bugs.opencompositing.org/show_bug.cgi?id=953|ici]] si les déchirements persistent.

== Anticrénelage ==

L'anticrénelage permet de réduire les effets « escalier » //sur les contours// des objets 3D.

Voici la différence de rendu **avec** et **sans** anticrénelage (à gauche, l'anticrénelage est désactivé, à droite, il est activé au maximum) :

{{antialiasing-off.png|Anticrénelage désactivé}} {{antialiasing-on.png|Anticrénelage activé}}

Pour l'activer, dans //Antialiasing Settings//, il suffit de sélectionner "Override Application Settings" (pour ne pas laisser le choix à l'application qui utilise de la 3D), et de régler la puissance du filtre.

Malgré le rendu assurément meilleur, il n'est pas conseillé d'activer cette option :

  * cela provoque des problèmes de clignotement d'ombres assez désagréables dans compiz (voir le [[https://bugs.launchpad.net/ubuntu/+source/compiz/+bug/279571|rapport de bogue]]) ;
  * les performances en souffrent énormément.

== Anisotropie ==

Le filtrage anisotrope permet de réduire les effets « escalier » //à l'intérieur des fenêtres// (sur les textures). Son effet est d'autant plus visible que l'on regarde l'objet 3D (une fenêtre sur une face du cube par exemple) avec un angle proche de 90°.

Voici la différence de rendu **avec** et **sans** filtrage anisotrope (à gauche, l'anisotropie est désactivée, à droite, elle est activée au maximum) :

{{anisotropic-off.png|Anisotropie désactivée}} {{anisotropic-on.png|Anisotropie activée}}

Pour l'activer, dans //Antialiasing Settings//, il suffit de régler la puissance du filtre.

Pour obtenir un meilleur rendu, il est conseillé de l'activer, d'autant plus qu'elle consomme beaucoup moins de ressources que l'anticrénelage.

==== Paramètres NVIDIA pour Xorg ====

Il est possible d'effectuer certains réglages du pilote **NVIDIA** directement dans le fichier ''/etc/X11/xorg.conf''.

Une page de documentation est consacrée à ce fichier : [[:Xorg]].

<note important>La moindre erreur dans le fichier ''xorg.conf'' pourrait empêcher votre système de démarrer graphiquement. Avant toute installation ou manipulation, effectuez une [[:xorg#sauvegarde_du_fichier|sauvegarde du fichier xorg.conf]].</note>


=== Modification de la configuration ===

[[tutoriel/comment_editer_un_fichier|Éditez le fichier]] ///etc/X11/xorg.conf// avec les [[:sudo|droits d'administration]], repérez la section concernant les pilotes **NVIDIA** :

<file>
Section "Device"
    Identifier  "Configured Video Device"
    Driver      "nvidia"
    Option      "NoLogo" "true"
EndSection
</file>

Chaque option se présente sous la forme :

<file>
    Option      "NomDeLOption" "valeur"
</file>

Il suffit de rajouter une ligne par option dans la ''Section'' correspondant aux pilotes **NVIDIA**.

Pour que les modifications soient prises en compte, il faut [[#redemarrer_le_serveur_x|redémarrer le serveur X]].

=== Options principales ===

== AllowSHMPixmaps ==

<file>
    Option      "AllowSHMPixmaps" "boolean"
</file>

Cette option indique si les applications peuvent allouer des **pixmaps** en mémoire partagée. Il est recommandé de désactiver cette option (valeur ''0''), car elle empêche le pilote **NVidia** d'accelérer de manière optimale les opérations de rendu impliquant des **pixmaps**.

== PixmapCacheSize ==

<file>
    Option      "PixmapCacheSize" "integer"
</file>

Cette option réserve une partie de la mémoire de la carte graphique pour allouer rapidement de la mémoire et améliorer les performances des logiciels qui utilisent intensément les **pixmaps**.
Utiliser une valeur de 1000000 ou supérieure améliore les opérations telles que le redimensionnement des fenêtres sous **compiz** ou **kde4**.

== RandRRotation ==

<file>
   Option "RandRRotation" "boolean"
</file>

Cette option permet d'utiliser [[:xrandr]] pour pouvoir faire tourner l'écran (mode portrait, inversé etc.).

=== Documentation complète ===

Une documentation détaillée sur le site de **NVIDIA**, en anglais, présente toutes les options disponibles :
[[http://us.download.nvidia.com/XFree86/Linux-x86/177.80/README/appendix-b.html|les options des pilotes NVIDIA 177.80]], 
[[http://us.download.nvidia.com/XFree86/Linux-x86/96.43.13/README/appendix-d.html|les options des pilotes NVIDIA 96.43.13]], ...


===== Utilisation =====

==== Optimisations ====

<note importante>
Ces modifications peuvent affecter la stabilité du système. De plus, certaines personnes ont rapporté qu'au lieu d'améliorer les performances, certaines options les dégradaient. Utilisez à vos risques et périls.</note>

Pour améliorer les performances des pilotes **177**, certaines optimisations sont préconisées sur le [[http://www.nvnews.net/vbulletin/showthread.php?t=118088|forum NVIDIA]].

Pour résumer, ajoutez dans la section consacrée aux pilotes **NVIDIA** de « /etc/X11/xorg.conf » les lignes :

<file>
    Option      "PixmapCacheSize" "1000000"
    Option      "AllowSHMPixmaps" "0"
</file>

(pour plus d'informations sur la manière de procéder, voir [[#parametres_nvidia_pour_xorg|ici]])

Puis dans //~/.gnomerc//, rajoutez :

<file>
nvidia-settings -a InitialPixmapPlacement=2 -a GlyphCache=1
</file>

([[#nvidia-settings]] doit être installé)

<note>
Ces optimisations, utilisées conjointement avec **compiz** (ou avec kwin pour KDE4), entraîneront l'affichage d'un contenu aléatoire dans les fenêtres en cours de création plutôt qu'un contenu noir. **NVIDIA** est au courant de ce problème non-critique et a prévu de le résoudre dans une future version des pilotes.
</note>

==== Rotation de l'écran ====

Le choix se fait simplement dans les paramètres de résolution de l'écran (Paramètres Système -> Affichage) en sélectionnant une option de rotation.

==== Connaître la version des pilotes ====
=== Dans nvidia-settings ===
Dans la page //X Server Information// de ''nvidia-settings'', la version des pilotes est affichée dans ''NVIDIA Driver Version''.

=== En ligne de commande ===
  - [[:tutoriel/comment_installer_un_paquet|Installer]] le paquet **[[apt>mesa-utils]]**
  - Puis dans un [[:terminal]], tapez la [[:commande_shell|commande]] suivante:<code>glxinfo | grep OpenGL</code>Voici un exemple de résultat :<code>
$ glxinfo | grep OpenGL
OpenGL vendor string: NVIDIA Corporation
OpenGL renderer string: GeForce 8600M GS/PCI/SSE2
OpenGL version string: 2.1.2 NVIDIA 177.80
OpenGL shading language version string: 1.20 NVIDIA via Cg compiler
OpenGL extensions:</code>

==== Accélération matérielle du décodage des vidéos (VDPAU/VAAPI) ====
Vous pouvez améliorer le rendu de certaines vidéos avec le pilote propriétaire, grâce à l’[[http://fr.wikipedia.org/wiki/Video_Acceleration_API|accélération vidéo API]], voir la page [[:vaapi#pilote_nvidia-proprietaire|vaapi]].

==== Overclock ====

<note important> Overclocker sa carte graphique la rend plus performante mais l'a fait également plus chauffer (risque de destruction) et peut la rendre instable (crash du système). Il est donc fortement conseillé d'augmenter par petit seuil les fréquences tout en surveillant la température du GPU.</note>

===Pour les cartes graphiques antérieures à la série 400===

Depuis la sortie des pilotes 1.0-7664, Nvidia a intégré l'overcloking coolbits qui permet ainsi de modifier dans nvidia-setting la fréquence de la ram et du cpu. Pour l'activer rendez-vous dans le fichier [[:xorg|xorg.conf]], allez dans la partie Section "Device" et ajoutez <code>Option "Coolbits" "1"</code>
Vous obtenez ainsi :
<code> Section "Device" 
      Identifier        "Device0"  
      Driver            "nvidia"
      VendorName        "NVIDIA Corporation"
      Option            "Coolbits"   "1"
 End Section                      </code>
Sauvegardez et redémarrez le serveur X et vous trouverez une nouvelle option dans nvidia-setting.

===Pour les cartes graphiques à partir de la série 400===

Il y a 2 solutions : 
  - Utiliser le programme [[nvidiux|nvidiux]] 
  - Utiliser nvidia-settings

Depuis la sortie des pilotes 337, l'option pour l'overcloking est de nouveau disponible pour les cartes 400 à 700 mais le numéro n'est plus "1" mais "8". De plus sur les versions plus récentes des driver NVidia, l'option est  ajouter dans la section "Screen".\\
Ouvrir le fichier xorg.conf avec les droits administrateur :
<code>gksudo gedit /ect/X11/xorg.conf</code>
Puis à la section "Screen", ajoutez <code>Option "Coolbits" "8"</code>
Exemple :
<code>
Section "Screen"
    Identifier     "Screen0"
    Device         "Device0"
    Monitor        "Monitor0"
    DefaultDepth    24
    Option         "NoLogo" "True"
    Option         "Coolbits" "8"
    SubSection     "Display"
        Depth       24
    EndSubSection
EndSection</code>

Puis redémarrer le serveur X :
<code>sudo restart lightdm</code>

<note>
Deux remarques :\\
1. Pour pouvoir overclocker votre carte il est nécessaire d'installer le pilote 337 ou supérieur.\\
2. 29/01/2017 : Le driver NVidia 367.57 installé depuis les dépôts ubuntu ne permet pas l'overclock. Pour en avoir la possibilité il est nécessaire d'installer le driver présent sur le site NVidia (vous pouvez prendre le même que préconisé par Ubuntu : le 367.57), pour cela se référer à la page traitant de l'installation des pilotes disponibles sur le [[#Via le site officiel|site nvidia]].
</note>
Dans //NVIDIA X Server Setting//, section PowerMizer, une nouvelle option est apparue "Editable Performance Levels". Cette option permet d'overclocker votre carte graphique mais également de l'underclocker.

<note important> Faire attention : "Editable Performance Levels" vous permet de **__rentrer des offset__** en MHz et non pas directement une consigne de fréquence. Conseil : pour un premier essai mettre juste -5 pour voir si cela fonctionne bien.\\
L'overclock n'agit bien souvent que sur un niveau de performance (le plus élevé), donc lorsque vous testez vos modification de fréquence, __**assurez-vous bien d'être dans le mode de performance modifié**__. Conseil : dans PowerMizer passez en mode "Performance maximum".
</note>

=== Sauvegarde des paramètres overclock ===
Après un redémarrage de la session, les paramètres d'overclocking sont perdus car nvidia-settings ne les sauvegarde pas.

<note> Le fait que nvidia-setting ne sauvegarde pas les paramètres d'overcloking peut être vu comme un avantage. En effet overcloker sa carte peut la rendre instable et peut faire crasher le système. Comme les paramètres ne sont pas sauvegardés, après un crash, au redémarrage de la machine la carte se mettra aux paramètres originaux.
Sauvegarder les paramètres overclock ne doit donc être fait que lorsque l'on s'est correctement assuré que ses paramètres sont fonctionnels. </note>

  * Une méthode qui permet de parer à ce problème est l'utilisation de [[nvidiux|nvidiux]]
  * L'autre méthode est d'utiliser nvidia-setting en ligne de commande et donc de modifier le script de démarrage "//NVIDIA X Server Settings//" (configuré dans "//Préférences des applications au démarrage//" d'Ubuntu):
<code>sh -c '/usr/bin/nvidia-settings --load-config-only ; \
/usr/bin/nvidia-settings --assign GPUOverclockingState=1 &>/dev/null ; \
/usr/bin/nvidia-settings --assign GPU3DClockFreqs=600,522 &>/dev/null ; \
/usr/bin/nvidia-settings --assign [gpu:0]/GPUPowerMizerMode=1 &>/dev/null'</code>

<note>Ceci va activer l'overclocking, définir une fréquence à 600MHz GPU, 522MHz Mémoire et activer le PowerMize à "Performance maximum".</note>

Il existe aussi une autre méthode (valable seulement sous Gnome), elle consiste à mettre en place votre commande dans //~/.xsession//:
<code> nano ~/.xsession</code>
Ensuite (Veuillez bien mettre les deux commandes sur deux lignes) : 
<file>nvidia-settings -a GPUOverclockingState=1 -a GPU2DClockFreqs=169,100 -a GPU3DClockFreqs=350,301
exec gnome-session</file>

Ensuite faites **ctrl+x touche o touche entrée**.

<note>La commande nvidia-settings aura pour but de définir son GPU2D à une fréquence de 169 MHz, avec une mémoire de 100MHz, et définir son GPU3D à une fréquence de 350MHz avec une mémoire de 301Mhz.</note>
===== Forcer le 96/120/144hz sur des moniteurs compatibles (pixel clocking) =====
Certains moniteurs aux très bonnes caractéristiques (dalle 27" PLS MAT 8ms - 2560x1440P) disponibles par l'import à faible coût, tels que le Qnix QX2710 et le X-Star DP2710, proposent par défaut à la carte graphique un EDID 60hz, alors que les dalles peuvent être facilement overclockées logiciellement en 96hz, voir en 120hz et 144hz si vous êtes chanceux.

Vous pourrez trouver quelques explications sur le sujet et un **xorg** tout propre [[:moniteur_Qnix_QX2710|sur cette page du wiki]].

===== Désinstallation des pilotes propriétaires =====
====Méthode graphique====
Pour désinstaller le pilote propriétaire:
  - Lancer le [[:gestionnaire de pilotes propriétaires#lancement| gestionnaire de pilotes propriétaires]];
  - Choisir le pilote libre "Serveur XX.Org"; 
  - "Appliquer les changements" (ou "activez" sur l'ancienne version du gestionnaire) 
  - Fermer le gestionnaire;
  - Redémarrer votre ordinateur.

====En ligne de commande====
Cette méthode via un [[:terminal]] peut être utilisée si vous n’arrivez pas à désinstaller les pilotes avec la méthode graphique ou que vous souhaitez repartir avec une nouvelle configuration.

  - Dans un premier temps, il faut relever le PID [qu'est-ce que c'est, il ressemble à quoi ?] du processus "nvidia-persitenced" puis le [[:faq_process#tuer_un_processus_par_son_pid|tuer]] afin de pouvoir désinstaller le paquet. Au 1er décembre 2014, [[:apt-get]] était incapable de tuer le bon processus et refusait de désinstaller le pilote propriétaire. \\ Pour connaître le PID du processus <code>ps -ef | grep nvidia</code> puis pour le tuer<code>sudo kill [le PID relevé : est-ce toute la ligne précédemment obtenu?]</code>
  - Ensuite, on supprime les paquets commençant par nvidia, <code>
sudo apt-get purge nvidia-*</code>puis on enlève les paquets qui ont été installés en même temps : typiquement les librairies [[:CUDA]]. Attention, la [[:commande_shell|commande]] "autoremove" peut supprimer d’autre paquets. Il peut être judicieux de vérifier avant d’enlever les paquets nvidia, de vérifier qu’il n’y a pas d’autres paquets qui peuvent être désinstallés.<code>sudo apt-get autoremove</code>
  - Ensuite on installe le pilote libre nouveau pour obtenir un affichage au prochain démarrage et ne pas se retrouver en mode console.<code>
sudo apt-get install xserver-xorg-video-nouveau</code>
  - Rechercher si nvidia-setting n’a pas mis des fichiers de configuration dans le dossier /etc/X11 et les supprimer.
  - Puis on redémarre le serveur X ou l’ordinateur pour valider la nouvelle configuration.
=====Problèmes connus =====
Reportez-vous à la page des [[:problemes_nvidia|problèmes liés aux cartes Nvidia]].
===== Voir aussi =====

  * **(en)** [[wu>HardwareSupportComponentsVideoCardsNvidia|Page NVIDIA de la documentation officielle]] avec la liste des compatibilités
  * **(en)** [[http://www.ubuntugeek.com/howto-install-nvidia-190-25-beta-drivers-in-ubuntu-jauntyintrepidhardy.html|page Installation des pilotes en version bêta]]
  * **(en)** [[http://willem.engen.nl/projects/disper/|Disper]] : outil en ligne de commande pour paramétrer l'écran avec le pilote propriétaire NVIDIA. Idéal pour être utilisé avec des scripts.

----

//Contributeurs : [[:contributeurs|Les contributeurs d'Ubuntu-fr]], [[:utilisateurs:claudiux]], [[:utilisateurs:l_africain|L'Africain]]. //