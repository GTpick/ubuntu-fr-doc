{{tag>programmation éducation programmation_visuelle}}
----

======Scratch - La programmation visuelle======
{{ http://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Scratch_Logo.png/200px-Scratch_Logo.png}}
**[[wpfr>Scratch_(langage)|Scratch]]** est un langage de programmation visuel **libre et OpenSource** (créé par le MIT), à vocation éducative et ludique ([[http://www.youtube.com/watch?v=drt06dKRybE&feature=related|voir une vidéo]]). Il fait partie du projet [[http://llk.media.mit.edu/|Lifelong Kindergarten]].

En septembre 2013 il a plus de 3 millions de projets fait et partagé par des enfants de toutes nationalités et disponible sur [[http://scratch.mit.edu/|le site officiel]].

Scratch essaye de développer :
  * **L'esprit créatif**
  * **Le raisonnement systématique (( et rationnel ))**
  * **Le travail collaboratif (( et ouvert ))**

Le slogan de Scratch est **« Imagine·Programme·Partage ! »**. Le partage est en effet un fondamental de la pédagogie. (([[http://linuxfr.org/2010/04/21/26767.html|Évolution culturelle : conquérir en copiant]]))

    * **Scratch est dynamique**, il permet de modifier le code du programme en cours d'exécution. Orienté multimédia pour l'enseignement à l'univers informatique des enfants, il traite avec une grande facilité les concepts de base de la programmation comme les boucles, les tests, les affectations de variables, et surtout de la manipulation des objets dans la pure tradition des [[E-Toys]] connus sous Squeak, tout comme les sons et les vidéos.

    * **Scratch est visuel**, tout le code est directement inscrit dans la langue maternelle de l'enfant (une vingtaine de langues européennes est disponible) sous forme de briques en couleurs (par exemple les contrôles en orange, les variables en rouge, les mouvements en bleu).

    * **Scratch est libre mais...**  Il permet ainsi à l'enseignant de diffuser sa pédagogie par une interactivité quasi-ludique des objets manipulés par ces briques logicielles. Le nom de Scratch provient du Turntablism, cet art de mélanger des sons grâce aux tables de mixage, comme cette vision de réutiliser des objets. Malheureusement, Scratch nécessite des logiciels non-libres pour fonctionner comme Adobe Air.

====== Scratch 2 ======

<note important>Scratch 2 peut être utilisé en ligne sans installation , il faut que [[flashplayer|flash]] soit installé : [[https://scratch.mit.edu/projects/editor/?tip_bar=getStarted | Utiliser scratch 2 en ligne]]
Il est préférable d'**utiliser Chromium,** il semble y avoir une erreur a l'enregistrement des fichiers en local avec Firefox.</note>
<note tip>Vous pouvez utiliser les 3 versions simultanément. 
  * La version 2 en ligne
  * La version 2 hors ligne
  * La version 1.4 hors ligne
</note>
<note important>Scratch 2 peut ouvrir les fichiers créés avec scratch 1.4 mais il ne permet pas de les enregistrer au format de scratch 1.4</note>

La version  actuelle de scratch est celle ci, par défaut  elle est utilisable en se connectant au site scratch.

Il est possible de l'utiliser en version locale sans le net.

===== Installation Scratch version 2 =====

<note>Ce programme nécessite Adobe air, pour l'installer suivre les indications de cette page : **[[:Adobe Air]]**</note>

<note important>Adobe Air n'est plus supporté depuis 2011, et son installation n'est pas conseillé, voir impossible. Alternative possible: [[http://www.phratch.com/|Le fork de Scratch: Phratch]]</note>

Le fichier d'installation du site de scratch pour linux se trouve sur cette page : [[https://scratch.mit.edu/scratch2download/]] sous le **2** choisissez **Linux**.

Pour l'installer depuis le terminal, faites <code>cd Téléchargements </code>
(si vous l'avez enregistré dans ce dossier)

Puis tapez cette commande.

<code>sudo Adobe\ AIR\ Application\ Installer</code>
Une fenêtre apparaît pour vous demander le "package" à installer. Sélectionner alors le package "scratch448.air" dans le répertoire "Téléchargements" (si c'est là où vous l'avez téléchargé) puis cliquer sur "Valider". Scratch va s'installer.

Un raccourci pour le programme est crée automatiquement.

==== Installation pas à pas de Scratch 2 pour Ubuntu 14.04 ou 16.04 en incluant Adobe Air ====

=== Installation d'Adobe Air ===

== Avec un script ==

Télécharger le script d'installation puis le rendre exécutable :

Dans un terminal, saisir la commande suivante :

<code>wget http://drive.noobslab.com/data/apps/AdobeAir/adobe-air.sh</code>

le rendre exécutable (ou clic-droit dessus, propriétés puis cocher la case //Autoriser l'exécution du fichier comme un programme//) :

<code>chmod +x adobe-air.sh</code>

et enfin l’exécuter en mode super utilisateur :

<code>sudo ./adobe-air.sh</code>

== Avec un paquet (ubuntu 16.04 16.10) ==

Source : [[http://www.noobslab.com/2015/05/adobeair-is-now-available-for-ubuntu.html]]

Version 64 bits
<code>wget -O adobe-air_amd64.deb http://drive.noobslab.com/data/apps/AdobeAir/adobeair_2.6.0.2_amd64.deb
sudo dpkg -i adobe-air_amd64.deb
sudo apt-get install -f && rm adobe-air_amd64.deb
</code>

Version 32 bits
<code>wget -O adobe-air_i386.deb http://drive.noobslab.com/data/apps/AdobeAir/adobeair_2.6.0.2_i386.deb
sudo dpkg -i adobe-air_i386.deb
sudo apt-get install -f && rm adobe-air_i386.deb
</code>
=== Installation de Scratch 2 ===

Toujours dans le terminal, télécharger Scratch  :

<code>wget https://scratch.mit.edu/scratchr2/static/sa/Scratch-453.air</code>

et lancer Adobe Air pour installer Scratch 2 :

<code>sudo Adobe\ AIR\ Application\ Installer</code>

Une fenêtre apparaît pour vous demander le "package" à installer. Sélectionner alors le package ".air" puis cliquer sur "Valider". Scratch va s'installer et un raccourci pour le programme est crée automatiquement.

====== Scratch 1.4 ======


===== Installation Scratch version 1.4 =====

==== Depuis les dépôts officiels ====

Pour installer Scratch, il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>scratch|scratch]]**.

=====Technologie =====

Scratch est une implémentation libre, visuelle et dynamique du langage de programmation [[wpfr>Smalltalk]] basé sur [[wpfr>Squeak]].

===== Étendre les capacités du logiciel =====

<note>Désactiver compiz peut améliorer la vitesse de rendu des animations.</note>

Il est possible de disposer de blocs de programmation supplémentaires à l'intérieur de scratch en utilisant : [[http://byob.berkeley.edu/|BYOB]].

Une autre "extension" pour Scratch partant de BYOB : [[http://pantherprogramming.weebly.com/index.html|Panther]] qui apporte de nouvelles fonctionnalités au logiciel.

Scratch permet aussi de contrôler une carte [[:arduino|arduino]] par le biais d'un firmware : [[http://seaside.citilab.eu/|S4A]].

Scratch permet aussi de contrôler un LEGO Wedo : [[http://info.scratch.mit.edu/WeDo|Sur le site officiel de scratch]].